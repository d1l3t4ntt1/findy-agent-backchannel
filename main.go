/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"
	"os"

	openapi "github.com/findy-network/findy-test-harness/go"
	"github.com/findy-network/findy-test-harness/go/agent"
)

func main() {
	log.Printf("Server started")

	port := os.Getenv("PORT")
	if port == "" {
		port = "9010"
	}

	a := agent.Init()
	a.Login()

	ConnectionApiService := openapi.NewConnectionApiService()
	ConnectionApiController := openapi.NewConnectionApiController(ConnectionApiService)

	CredentialApiService := openapi.NewCredentialApiService()
	CredentialApiController := openapi.NewCredentialApiController(CredentialApiService)

	CredentialDefinitionApiService := openapi.NewCredentialDefinitionApiService()
	CredentialDefinitionApiController := openapi.NewCredentialDefinitionApiController(CredentialDefinitionApiService)

	DIDApiService := openapi.NewDIDApiService()
	DIDApiController := openapi.NewDIDApiController(DIDApiService)

	IssueCredentialApiService := openapi.NewIssueCredentialApiService()
	IssueCredentialApiController := openapi.NewIssueCredentialApiController(IssueCredentialApiService)

	IssueCredentialV2ApiService := openapi.NewIssueCredentialV2ApiService()
	IssueCredentialV2ApiController := openapi.NewIssueCredentialV2ApiController(IssueCredentialV2ApiService)

	PresentProofApiService := openapi.NewPresentProofApiService()
	PresentProofApiController := openapi.NewPresentProofApiController(PresentProofApiService)

	SchemaApiService := openapi.NewSchemaApiService()
	SchemaApiController := openapi.NewSchemaApiController(SchemaApiService)

	StatusApiService := openapi.NewStatusApiService()
	StatusApiController := openapi.NewStatusApiController(StatusApiService)

	router := openapi.NewRouter(ConnectionApiController, CredentialApiController, CredentialDefinitionApiController, DIDApiController, IssueCredentialApiController, IssueCredentialV2ApiController, PresentProofApiController, SchemaApiController, StatusApiController)

	log.Fatal(http.ListenAndServe(":"+port, router))
}
