/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type IssueCredentialV2SendOfferRequest struct {

	Data IssueCredentialV2SendProposalRequestData `json:"data"`

	Id string `json:"id"`
}

// AssertIssueCredentialV2SendOfferRequestRequired checks if the required fields are not zero-ed
func AssertIssueCredentialV2SendOfferRequestRequired(obj IssueCredentialV2SendOfferRequest) error {
	elements := map[string]interface{}{
		"data": obj.Data,
		"id": obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertIssueCredentialV2SendProposalRequestDataRequired(obj.Data); err != nil {
		return err
	}
	return nil
}

// AssertRecurseIssueCredentialV2SendOfferRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of IssueCredentialV2SendOfferRequest (e.g. [][]IssueCredentialV2SendOfferRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIssueCredentialV2SendOfferRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIssueCredentialV2SendOfferRequest, ok := obj.(IssueCredentialV2SendOfferRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIssueCredentialV2SendOfferRequestRequired(aIssueCredentialV2SendOfferRequest)
	})
}
