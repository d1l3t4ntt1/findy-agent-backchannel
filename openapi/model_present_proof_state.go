/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// PresentProofState : All possible present proof state values
type PresentProofState string

// List of PresentProofState
const (
	PRESENT_PROOF_PROPOSAL_SENT         PresentProofState = "proposal-sent"
	PRESENT_PROOF_PROPOSAL_RECEIVED     PresentProofState = "proposal-received"
	PRESENT_PROOF_REQUEST_SENT          PresentProofState = "request-sent"
	PRESENT_PROOF_REQUEST_RECEIVED      PresentProofState = "request-received"
	PRESENT_PROOF_PRESENTATION_SENT     PresentProofState = "presentation-sent"
	PRESENT_PROOF_PRESENTATION_RECEIVED PresentProofState = "presentation-received"
	PRESENT_PROOF_REJECT_SENT           PresentProofState = "reject-sent"
	PRESENT_PROOF_DONE                  PresentProofState = "done"
)

// AssertPresentProofStateRequired checks if the required fields are not zero-ed
func AssertPresentProofStateRequired(obj PresentProofState) error {
	return nil
}

// AssertRecursePresentProofStateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PresentProofState (e.g. [][]PresentProofState), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePresentProofStateRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPresentProofState, ok := obj.(PresentProofState)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPresentProofStateRequired(aPresentProofState)
	})
}
