/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type RevocationRevokeCredentialRequestData struct {

	CredRevId string `json:"cred_rev_id"`

	RevRegistryId string `json:"rev_registry_id"`

	PublishImmediately bool `json:"publish_immediately"`

	NotifyConnectionId string `json:"notify_connection_id,omitempty"`
}

// AssertRevocationRevokeCredentialRequestDataRequired checks if the required fields are not zero-ed
func AssertRevocationRevokeCredentialRequestDataRequired(obj RevocationRevokeCredentialRequestData) error {
	elements := map[string]interface{}{
		"cred_rev_id": obj.CredRevId,
		"rev_registry_id": obj.RevRegistryId,
		"publish_immediately": obj.PublishImmediately,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseRevocationRevokeCredentialRequestDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RevocationRevokeCredentialRequestData (e.g. [][]RevocationRevokeCredentialRequestData), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRevocationRevokeCredentialRequestDataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRevocationRevokeCredentialRequestData, ok := obj.(RevocationRevokeCredentialRequestData)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRevocationRevokeCredentialRequestDataRequired(aRevocationRevokeCredentialRequestData)
	})
}
