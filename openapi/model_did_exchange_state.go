/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// DidExchangeState : All possible did exchange state values
type DidExchangeState string

// List of DidExchangeState
const (
	DID_EXCHANGE_START               DidExchangeState = "start"
	DID_EXCHANGE_INVITATION_SENT     DidExchangeState = "invitation-sent"
	DID_EXCHANGE_INVITATION_RECEIVED DidExchangeState = "invitation-received"
	DID_EXCHANGE_REQUEST_SENT        DidExchangeState = "request-sent"
	DID_EXCHANGE_REQUEST_RECEIVED    DidExchangeState = "request-received"
	DID_EXCHANGE_RESPONSE_SENT       DidExchangeState = "response-sent"
	DID_EXCHANGE_RESPONSE_RECEIVED   DidExchangeState = "response-received"
	DID_EXCHANGE_ABANDONED           DidExchangeState = "abandoned"
	DID_EXCHANGE_COMPLETED           DidExchangeState = "completed"
)

// AssertDidExchangeStateRequired checks if the required fields are not zero-ed
func AssertDidExchangeStateRequired(obj DidExchangeState) error {
	return nil
}

// AssertRecurseDidExchangeStateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DidExchangeState (e.g. [][]DidExchangeState), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDidExchangeStateRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDidExchangeState, ok := obj.(DidExchangeState)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDidExchangeStateRequired(aDidExchangeState)
	})
}
