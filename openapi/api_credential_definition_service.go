/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/findy-network/findy-agent-backchannel/agent"
)

// CredentialDefinitionApiService is a service that implents the logic for the CredentialDefinitionApiServicer
// This service should implement the business logic for every endpoint for the CredentialDefinitionApi API.
// Include any external packages or services that will be required by this service.
type CredentialDefinitionApiService struct {
	a *agent.Agent
}

// NewCredentialDefinitionApiService creates a default api service
func NewCredentialDefinitionApiService(a *agent.Agent) CredentialDefinitionApiServicer {
	return &CredentialDefinitionApiService{
		a: a,
	}
}

// CredentialDefinitionCreate - Create a new credential definition
func (s *CredentialDefinitionApiService) CredentialDefinitionCreate(ctx context.Context, inlineObject5 InlineObject5) (ImplResponse, error) {
	res, err := s.a.CreateCredDef(inlineObject5.Data.SchemaId, inlineObject5.Data.Tag)
	if err == nil {
		return Response(200, map[string]interface{}{"credential_definition_id": res}), nil
	}

	return Response(http.StatusInternalServerError, nil), err
}

// CredentialDefinitionGetById - Get credential definition by id
func (s *CredentialDefinitionApiService) CredentialDefinitionGetById(ctx context.Context, credentialDefinitionId string) (ImplResponse, error) {
	res, err := s.a.GetCredDef(credentialDefinitionId)
	if err == nil {
		var resMap map[string]interface{}
		if err = json.Unmarshal([]byte(res), &resMap); err == nil {
			return Response(200, resMap), nil
		}
	}
	return Response(http.StatusInternalServerError, nil), err
}
