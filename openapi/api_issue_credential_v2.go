/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"
)

// A IssueCredentialV2ApiController binds http requests to an api service and writes the service results to the http response
type IssueCredentialV2ApiController struct {
	service IssueCredentialV2ApiServicer
}

// NewIssueCredentialV2ApiController creates a default api controller
func NewIssueCredentialV2ApiController(s IssueCredentialV2ApiServicer) Router {
	return &IssueCredentialV2ApiController{service: s}
}

// Routes returns all of the api route for the IssueCredentialV2ApiController
func (c *IssueCredentialV2ApiController) Routes() Routes {
	return Routes{ 
		{
			"IssueCredentialV2PrepareJsonLD",
			strings.ToUpper("Post"),
			"/agent/command/issue-credential-v2/prepare-json-ld",
			c.IssueCredentialV2PrepareJsonLD,
		},
	}
}

// IssueCredentialV2PrepareJsonLD - Prepare for issuing a JSON-LD credential (RFC0593)
func (c *IssueCredentialV2ApiController) IssueCredentialV2PrepareJsonLD(w http.ResponseWriter, r *http.Request) {
	uNKNOWNBASETYPE := &UNKNOWN_BASE_TYPE{}
	if err := json.NewDecoder(r.Body).Decode(&uNKNOWNBASETYPE); err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}
	result, err := c.service.IssueCredentialV2PrepareJsonLD(r.Context(), *uNKNOWNBASETYPE)
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
