/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ConnectionSendPingRequest struct {

	Id string `json:"id"`

	Data ConnectionSendPingRequestData `json:"data"`
}

// AssertConnectionSendPingRequestRequired checks if the required fields are not zero-ed
func AssertConnectionSendPingRequestRequired(obj ConnectionSendPingRequest) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"data": obj.Data,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertConnectionSendPingRequestDataRequired(obj.Data); err != nil {
		return err
	}
	return nil
}

// AssertRecurseConnectionSendPingRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ConnectionSendPingRequest (e.g. [][]ConnectionSendPingRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseConnectionSendPingRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aConnectionSendPingRequest, ok := obj.(ConnectionSendPingRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertConnectionSendPingRequestRequired(aConnectionSendPingRequest)
	})
}
