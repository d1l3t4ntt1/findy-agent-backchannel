/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PresentProofV2SendRequestIndy struct {

	Format string `json:"format"`

	Comment string `json:"comment,omitempty"`

	Data map[string]interface{} `json:"data"`
}

// AssertPresentProofV2SendRequestIndyRequired checks if the required fields are not zero-ed
func AssertPresentProofV2SendRequestIndyRequired(obj PresentProofV2SendRequestIndy) error {
	elements := map[string]interface{}{
		"format": obj.Format,
		"data": obj.Data,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecursePresentProofV2SendRequestIndyRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PresentProofV2SendRequestIndy (e.g. [][]PresentProofV2SendRequestIndy), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePresentProofV2SendRequestIndyRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPresentProofV2SendRequestIndy, ok := obj.(PresentProofV2SendRequestIndy)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPresentProofV2SendRequestIndyRequired(aPresentProofV2SendRequestIndy)
	})
}
