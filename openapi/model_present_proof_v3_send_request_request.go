/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PresentProofV3SendRequestRequest struct {

	Id string `json:"id,omitempty"`

	ConnectionId string `json:"connection_id,omitempty"`

	Data PresentProofV3SendRequestRequestData `json:"data"`
}

// AssertPresentProofV3SendRequestRequestRequired checks if the required fields are not zero-ed
func AssertPresentProofV3SendRequestRequestRequired(obj PresentProofV3SendRequestRequest) error {
	elements := map[string]interface{}{
		"data": obj.Data,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertPresentProofV3SendRequestRequestDataRequired(obj.Data); err != nil {
		return err
	}
	return nil
}

// AssertRecursePresentProofV3SendRequestRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PresentProofV3SendRequestRequest (e.g. [][]PresentProofV3SendRequestRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePresentProofV3SendRequestRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPresentProofV3SendRequestRequest, ok := obj.(PresentProofV3SendRequestRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPresentProofV3SendRequestRequestRequired(aPresentProofV3SendRequestRequest)
	})
}
