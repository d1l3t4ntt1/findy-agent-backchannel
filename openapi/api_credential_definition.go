/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A CredentialDefinitionApiController binds http requests to an api service and writes the service results to the http response
type CredentialDefinitionApiController struct {
	service CredentialDefinitionApiServicer
}

// NewCredentialDefinitionApiController creates a default api controller
func NewCredentialDefinitionApiController(s CredentialDefinitionApiServicer) Router {
	return &CredentialDefinitionApiController{service: s}
}

// Routes returns all of the api route for the CredentialDefinitionApiController
func (c *CredentialDefinitionApiController) Routes() Routes {
	return Routes{ 
		{
			"CredentialDefinitionCreate",
			strings.ToUpper("Post"),
			"/agent/command/credential-definition",
			c.CredentialDefinitionCreate,
		},
		{
			"CredentialDefinitionGetById",
			strings.ToUpper("Get"),
			"/agent/command/credential-definition/{credentialDefinitionId}",
			c.CredentialDefinitionGetById,
		},
	}
}

// CredentialDefinitionCreate - Create a new credential definition
func (c *CredentialDefinitionApiController) CredentialDefinitionCreate(w http.ResponseWriter, r *http.Request) {
	inlineObject5 := &InlineObject5{}
	if err := json.NewDecoder(r.Body).Decode(&inlineObject5); err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}
	result, err := c.service.CredentialDefinitionCreate(r.Context(), *inlineObject5)
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// CredentialDefinitionGetById - Get credential definition by id
func (c *CredentialDefinitionApiController) CredentialDefinitionGetById(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	credentialDefinitionId := params["credentialDefinitionId"]
	
	result, err := c.service.CredentialDefinitionGetById(r.Context(), credentialDefinitionId)
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
