/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type SchemaCreateRequestData struct {

	SchemaName string `json:"schema_name"`

	SchemaVersion string `json:"schema_version"`

	Attributes []string `json:"attributes"`
}

// AssertSchemaCreateRequestDataRequired checks if the required fields are not zero-ed
func AssertSchemaCreateRequestDataRequired(obj SchemaCreateRequestData) error {
	elements := map[string]interface{}{
		"schema_name": obj.SchemaName,
		"schema_version": obj.SchemaVersion,
		"attributes": obj.Attributes,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSchemaCreateRequestDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SchemaCreateRequestData (e.g. [][]SchemaCreateRequestData), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSchemaCreateRequestDataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSchemaCreateRequestData, ok := obj.(SchemaCreateRequestData)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSchemaCreateRequestDataRequired(aSchemaCreateRequestData)
	})
}
