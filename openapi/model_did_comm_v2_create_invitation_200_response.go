/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type DidCommV2CreateInvitation200Response struct {

	Invitation map[string]interface{} `json:"invitation"`
}

// AssertDidCommV2CreateInvitation200ResponseRequired checks if the required fields are not zero-ed
func AssertDidCommV2CreateInvitation200ResponseRequired(obj DidCommV2CreateInvitation200Response) error {
	elements := map[string]interface{}{
		"invitation": obj.Invitation,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseDidCommV2CreateInvitation200ResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of DidCommV2CreateInvitation200Response (e.g. [][]DidCommV2CreateInvitation200Response), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseDidCommV2CreateInvitation200ResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aDidCommV2CreateInvitation200Response, ok := obj.(DidCommV2CreateInvitation200Response)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertDidCommV2CreateInvitation200ResponseRequired(aDidCommV2CreateInvitation200Response)
	})
}
