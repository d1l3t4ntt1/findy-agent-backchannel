/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// CoordinateMediationState : All possible coordinate mediation state values
type CoordinateMediationState string

// List of CoordinateMediationState
const (
	REQUEST_SENT CoordinateMediationState = "request-sent"
	REQUEST_RECEIVED CoordinateMediationState = "request-received"
	GRANT_SENT CoordinateMediationState = "grant-sent"
	GRANT_RECEIVED CoordinateMediationState = "grant-received"
	DENY_SENT CoordinateMediationState = "deny-sent"
	DENY_RECEIVED CoordinateMediationState = "deny-received"
)

// AssertCoordinateMediationStateRequired checks if the required fields are not zero-ed
func AssertCoordinateMediationStateRequired(obj CoordinateMediationState) error {
	return nil
}

// AssertRecurseCoordinateMediationStateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CoordinateMediationState (e.g. [][]CoordinateMediationState), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCoordinateMediationStateRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCoordinateMediationState, ok := obj.(CoordinateMediationState)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCoordinateMediationStateRequired(aCoordinateMediationState)
	})
}
