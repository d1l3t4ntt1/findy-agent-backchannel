/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type IssueCredentialV2Store200ResponseAllOfIndy struct {

	CredentialId string `json:"credential_id"`
}

// AssertIssueCredentialV2Store200ResponseAllOfIndyRequired checks if the required fields are not zero-ed
func AssertIssueCredentialV2Store200ResponseAllOfIndyRequired(obj IssueCredentialV2Store200ResponseAllOfIndy) error {
	elements := map[string]interface{}{
		"credential_id": obj.CredentialId,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseIssueCredentialV2Store200ResponseAllOfIndyRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of IssueCredentialV2Store200ResponseAllOfIndy (e.g. [][]IssueCredentialV2Store200ResponseAllOfIndy), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIssueCredentialV2Store200ResponseAllOfIndyRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIssueCredentialV2Store200ResponseAllOfIndy, ok := obj.(IssueCredentialV2Store200ResponseAllOfIndy)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIssueCredentialV2Store200ResponseAllOfIndyRequired(aIssueCredentialV2Store200ResponseAllOfIndy)
	})
}
