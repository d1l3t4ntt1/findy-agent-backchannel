/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type PresentProofSendProposalRequestData struct {
	ConnectionId string `json:"connection_id"`

	PresentationProposal PresentationPreview `json:"presentation_proposal"`
}

// AssertPresentProofSendProposalRequestDataRequired checks if the required fields are not zero-ed
func AssertPresentProofSendProposalRequestDataRequired(obj PresentProofSendProposalRequestData) error {
	elements := map[string]interface{}{
		"connection_id":         obj.ConnectionId,
		"presentation_proposal": obj.PresentationProposal,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertPresentationPreviewRequired(obj.PresentationProposal); err != nil {
		return err
	}
	return nil
}

// AssertRecursePresentProofSendProposalRequestDataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PresentProofSendProposalRequestData (e.g. [][]PresentProofSendProposalRequestData), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePresentProofSendProposalRequestDataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPresentProofSendProposalRequestData, ok := obj.(PresentProofSendProposalRequestData)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPresentProofSendProposalRequestDataRequired(aPresentProofSendProposalRequestData)
	})
}
