/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type IssueCredentialV2AttachFormatIndyCredFilter struct {

	SchemaIssuerDid string `json:"schema_issuer_did,omitempty"`

	SchemaId string `json:"schema_id,omitempty"`

	SchemaName string `json:"schema_name,omitempty"`

	SchemaVersion string `json:"schema_version,omitempty"`

	CredDefId string `json:"cred_def_id,omitempty"`

	IssuerDid string `json:"issuer_did,omitempty"`
}

// AssertIssueCredentialV2AttachFormatIndyCredFilterRequired checks if the required fields are not zero-ed
func AssertIssueCredentialV2AttachFormatIndyCredFilterRequired(obj IssueCredentialV2AttachFormatIndyCredFilter) error {
	return nil
}

// AssertRecurseIssueCredentialV2AttachFormatIndyCredFilterRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of IssueCredentialV2AttachFormatIndyCredFilter (e.g. [][]IssueCredentialV2AttachFormatIndyCredFilter), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIssueCredentialV2AttachFormatIndyCredFilterRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIssueCredentialV2AttachFormatIndyCredFilter, ok := obj.(IssueCredentialV2AttachFormatIndyCredFilter)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIssueCredentialV2AttachFormatIndyCredFilterRequired(aIssueCredentialV2AttachFormatIndyCredFilter)
	})
}
