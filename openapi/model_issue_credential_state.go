/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// IssueCredentialState : All possible issue credential state values
type IssueCredentialState string

// List of IssueCredentialState
const (
	ISSUE_CREDENTIAL_PROPOSAL_SENT       IssueCredentialState = "proposal-sent"
	ISSUE_CREDENTIAL_PROPOSAL_RECEIVED   IssueCredentialState = "proposal-received"
	ISSUE_CREDENTIAL_OFFER_SENT          IssueCredentialState = "offer-sent"
	ISSUE_CREDENTIAL_OFFER_RECEIVED      IssueCredentialState = "offer-received"
	ISSUE_CREDENTIAL_REQUEST_SENT        IssueCredentialState = "request-sent"
	ISSUE_CREDENTIAL_REQUEST_RECEIVED    IssueCredentialState = "request-received"
	ISSUE_CREDENTIAL_CREDENTIAL_ISSUED   IssueCredentialState = "credential-issued"
	ISSUE_CREDENTIAL_CREDENTIAL_RECEIVED IssueCredentialState = "credential-received"
	ISSUE_CREDENTIAL_DONE                IssueCredentialState = "done"
)

// AssertIssueCredentialStateRequired checks if the required fields are not zero-ed
func AssertIssueCredentialStateRequired(obj IssueCredentialState) error {
	return nil
}

// AssertRecurseIssueCredentialStateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of IssueCredentialState (e.g. [][]IssueCredentialState), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIssueCredentialStateRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIssueCredentialState, ok := obj.(IssueCredentialState)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIssueCredentialStateRequired(aIssueCredentialState)
	})
}
