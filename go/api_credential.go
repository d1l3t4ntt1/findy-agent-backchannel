/*
 * Aries Agent Test Harness Backchannel API
 *
 * This page documents the backchannel API the test harness uses to communicate with agents under tests.  For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A CredentialApiController binds http requests to an api service and writes the service results to the http response
type CredentialApiController struct {
	service CredentialApiServicer
}

// NewCredentialApiController creates a default api controller
func NewCredentialApiController(s CredentialApiServicer) Router {
	return &CredentialApiController{service: s}
}

// Routes returns all of the api route for the CredentialApiController
func (c *CredentialApiController) Routes() Routes {
	return Routes{ 
		{
			"CredentialGetById",
			strings.ToUpper("Get"),
			"/agent/command/credential/{credentialId}",
			c.CredentialGetById,
		},
	}
}

// CredentialGetById - Get credential by id
func (c *CredentialApiController) CredentialGetById(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	credentialId := params["credentialId"]
	
	result, err := c.service.CredentialGetById(r.Context(), credentialId)
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
