openapi: 3.0.0
info:
  contact:
    name: Province of British Columbia
    url: https://github.com/hyperledger/aries-agent-test-harness
  description: |
    This page documents the backchannel API the test harness uses to communicate with agents under tests.

    For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Aries Agent Test Harness Backchannel API
  version: 1.0.0
  x-logo:
    url: https://raw.githubusercontent.com/hyperledger/aries-agent-test-harness/master/docs/assets/aries-logo.png
    altText: Hyperledger Aries logo
servers:
- description: Agent Backchannel
  url: "http://localhost:{port}"
  variables:
    port:
      default: "9020"
      description: |
        The port to use for the backchannel
          * Acme:    9020
          * Bob:      9030
          * Faber:    9040
          * Mallory:  9050
      enum:
      - "9020"
      - "9030"
      - "9040"
      - "9050"
tags:
- description: Agent commands to get agent status
  name: Status
- description: Agent commands to manage an agent
  name: Agent
- description: Agent commands related to `connection` topic
  name: Connection
- description: Agent commands related to `did` topic
  name: DID
- description: Agent commands related to `schema` topic
  name: Schema
- description: Agent commands related to `credential-definition` topic
  name: Credential Definition
- description: Agent commands related to `issue-credential` topic
  name: Issue Credential
- description: Agent commands related to `issue-credential-v2` topic
  name: Issue Credential V2
- description: Agent commands related to `credential` topic
  name: Credential
- description: Agent commands related to `proof` topic
  name: Present Proof
- description: Agent commands related to `proof-v2` topic
  name: Present Proof V2
- description: Agent commands related to `proof-v3` topic
  name: Present Proof V3
- description: Agent commands related to `revocation` topic
  name: Revocation
- description: Agent commands related to `did-exchange` topic
  name: DID Exchange
- description: Agent commands related to `out-of-band` topic
  name: Out of Band
- description: Agent commands related to `mediation` topic
  externalDocs:
    url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md
  name: Coordinate Mediation
- description: Agent commands related to `oob-v2` topic
  name: Out of Band V2
paths:
  /agent/command/status:
    get:
      operationId: StatusGet
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusGet_200_response'
          description: Agent is active
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusGet_418_response'
          description: Agent is not active
      summary: Get agent/backchannel status
      tags:
      - Status
  /agent/command/version:
    get:
      operationId: VersionGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: 0.6.0
                type: string
          description: Agent version
      summary: Get agent/backchannel version
      tags:
      - Status
  /agent/command/agent/start:
    post:
      operationId: AgentStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentStart_request'
        description: |
          Start the agent with specified parameters. If values are emitted, agent default values should be used.
          For the `inbound_transports` and `outbound_transports` properties the following applies:
            - If the property is left out the agent should use default configuration. For most agent this means only using HTTP inbound/outbound transport
            - If the property is an empty array no inbound or outbound transport should be used. This is useful for testing cases where the agent doesn't have an inbound endpoint. An error should be thrown in if the transport requirements can't be met.
            - If the property contains transports, the specified transports should be used.
        required: true
      responses:
        "200":
          description: OK
        "500":
          description: Failed
      summary: (re)start the agent
      tags:
      - Agent
  /agent/command/connection:
    get:
      operationId: ConnectionGetAll
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectionResponse'
                type: array
          description: Connections
      summary: Get all connections
      tags:
      - Connection
  /agent/command/connection/{connectionId}:
    get:
      operationId: ConnectionGetById
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
          description: Connection
        "404":
          description: Connection not found
      summary: Get connection by id
      tags:
      - Connection
  /agent/command/connection/create-invitation:
    post:
      operationId: ConnectionCreateInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionCreateInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionCreateInvitation_200_response'
          description: Invitation created
      summary: Create a new connection invitation
      tags:
      - Connection
  /agent/command/connection/receive-invitation:
    post:
      operationId: ConnectionReceiveInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionReceiveInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionReceiveInvitation_200_response'
          description: Invitation received
      summary: Receive an invitation
      tags:
      - Connection
  /agent/command/connection/accept-invitation:
    post:
      operationId: ConnectionAcceptInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionAcceptInvitation_200_response'
          description: Invitation accepted
      summary: Accept an invitation
      tags:
      - Connection
  /agent/command/connection/accept-request:
    post:
      operationId: ConnectionAcceptRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionAcceptRequest_200_response'
          description: Request accepted
      summary: Accept a connection request
      tags:
      - Connection
  /agent/command/connection/send-ping:
    post:
      operationId: ConnectionSendPing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSendPing_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionAcceptRequest_200_response'
          description: Trust ping sent
      summary: Send trust ping
      tags:
      - Connection
  /agent/command/did:
    get:
      operationId: DIDGetPublic
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDGetPublic_200_response'
          description: Public DID information
      summary: Get public DID
      tags:
      - DID
  /agent/command/schema/{schemaId}:
    get:
      operationId: SchemaGetById
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          $ref: '#/components/schemas/SchemaId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Schema
        "404":
          description: Schema not found
      summary: Get schema by id
      tags:
      - Schema
  /agent/command/schema:
    post:
      operationId: SchemaCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaCreate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaCreate_200_response'
          description: Schema created
      summary: Create a new schema
      tags:
      - Schema
  /agent/command/credential-definition/{credentialDefinitionId}:
    get:
      operationId: CredentialDefinitionGetById
      parameters:
      - explode: false
        in: path
        name: credentialDefinitionId
        required: true
        schema:
          $ref: '#/components/schemas/CredentialDefinitionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinition'
          description: Credential Definition
        "404":
          description: Credential Definition not found
      summary: Get credential definition by id
      tags:
      - Credential Definition
  /agent/command/credential-definition:
    post:
      operationId: CredentialDefinitionCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialDefinitionCreate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionCreate_200_response'
          description: Credential definition created
      summary: Create a new credential definition
      tags:
      - Credential Definition
  /agent/command/issue-credential/{credentialExchangeThreadId}:
    get:
      operationId: IssueCredentialGetByThreadId
      parameters:
      - explode: false
        in: path
        name: credentialExchangeThreadId
        required: true
        schema:
          $ref: '#/components/schemas/ThreadId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialOperationResponse'
          description: Credential Exchange
        "404":
          description: Credential exchange record not found
      summary: Get credential exchange record by thread id
      tags:
      - Issue Credential
  /agent/command/issue-credential/send-proposal:
    post:
      description: |
        Send a `propose-credential` message to connection with `connection_id` in body.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#propose-credential
      operationId: IssueCredentialSendProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialSendProposal_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialSendProposal_200_response'
          description: Credential proposal sent
      summary: Send credential proposal
      tags:
      - Issue Credential
  /agent/command/issue-credential/create-offer:
    post:
      description: |
        Create an `offer-credential` message. The message can be used in a connection(less) out-of-band invitation.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#offer-credential
      operationId: IssueCredentialCreateOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialCreateOffer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialCreateOffer_200_response'
          description: Credential offer created
      summary: Create credential offer.
      tags:
      - Issue Credential
  /agent/command/issue-credential/send-offer:
    post:
      description: |
        Send an `offer-credential` message.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#offer-credential
      operationId: IssueCredentialSendOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialSendOffer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialCreateOffer_200_response_record'
          description: Credential offer sent
      summary: Send credential offer
      tags:
      - Issue Credential
  /agent/command/issue-credential/send-request:
    post:
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#request-credential
      operationId: IssueCredentialSendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialSendRequest_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialSendRequest_200_response'
          description: Credential request sent
      summary: Send credential request
      tags:
      - Issue Credential
  /agent/command/issue-credential/issue:
    post:
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#issue-credential
      operationId: IssueCredentialIssue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialIssue_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialIssue_200_response'
          description: Credential issued
      summary: Issue Credential
      tags:
      - Issue Credential
  /agent/command/issue-credential/store:
    post:
      operationId: IssueCredentialStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialStore_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialStore_200_response'
          description: Credential stored
      summary: Store Credential
      tags:
      - Issue Credential
  /agent/command/issue-credential-v2/{credentialExchangeThreadId}:
    get:
      operationId: IssueCredentialV2GetByThreadId
      parameters:
      - explode: false
        in: path
        name: credentialExchangeThreadId
        required: true
        schema:
          $ref: '#/components/schemas/ThreadId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialOperationResponse'
          description: Credential Exchange v2
        "404":
          description: Credential exchange record not found
      summary: Get credential exchange v2 record by thread id
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v2/prepare-json-ld:
    post:
      operationId: IssueCredentialV2PrepareJsonLD
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialV2PrepareJsonLD_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialV2PrepareJsonLD_200_response'
          description: Ready to issue a JSON-LD credential
      summary: Prepare for issuing a JSON-LD credential (RFC0593)
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v2/send-proposal:
    post:
      description: |
        Send a `propose-credential` message to connection with `connection_id` in body.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#propose-credential
      operationId: IssueCredentialV2SendProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialV2SendProposal_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialSendProposal_200_response'
          description: Credential proposal sent
      summary: Send credential proposal
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v2/send-offer:
    post:
      description: |
        Send an `offer-credential` message.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#offer-credential
      operationId: IssueCredentialV2SendOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialV2SendOffer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialCreateOffer_200_response_record'
          description: Credential offer sent
      summary: Send credential offer
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v2/create-offer:
    post:
      description: |
        Create an `offer-credential` message. The message can be used in a connection(less) out-of-band invitation.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#offer-credential
      operationId: IssueCredentialV2CreateOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Offer_to_start_credential_issuance_flow_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialV2CreateOffer_200_response'
          description: Credential offer created
      summary: Create credential offer
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v2/send-request:
    post:
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#request-credential
      operationId: IssueCredentialV2SendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialV2SendRequest_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialSendRequest_200_response'
          description: Credential request sent
      summary: Send credential request
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v2/issue:
    post:
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0453-issue-credential-v2#issue-credential
      operationId: IssueCredentialV2Issue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialIssue_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialIssue_200_response'
          description: Credential issued
      summary: Issue Credential
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v2/store:
    post:
      operationId: IssueCredentialV2Store
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialStore_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialV2Store_200_response'
          description: Credential stored
      summary: Store Credential
      tags:
      - Issue Credential V2
  /agent/command/issue-credential-v3/send-proposal:
    post:
      description: |
        Send a `propose-credential` message to connection with `connection_id` and `pthid` in body.
      externalDocs:
        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#propose-credential
      operationId: IssueCredentialV3SendProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialV3SendProposal_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialSendProposal_200_response'
          description: Credential proposal sent
      summary: Send credential proposal
      tags:
      - Issue Credential V3
  /agent/command/issue-credential-v3/retrieve-credential-proposal:
    get:
      description: |
        Retrieves the Propose Credential object received by the agent.
      externalDocs:
        url: https://identity.foundation/waci-presentation-exchange/#issuance-2
      operationId: IssueCredentialV3RetrieveCredentialProposal
      responses:
        "200":
          description: Propose Credential object
      summary: Retrieves the Propose Credential object received by the agent.
      tags:
      - Issue Credential V3
  /agent/command/issue-credential-v3/send-offer:
    post:
      description: |
        Send an `offer-credential` message.
      externalDocs:
        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#offer-credential
      operationId: IssueCredentialV3SendOffer
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialCreateOffer_200_response_record'
          description: Credential offer sent
      summary: Send credential offer
      tags:
      - Issue Credential V3
  /agent/command/issue-credential-v3/send-request:
    post:
      externalDocs:
        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#request-credential
      operationId: IssueCredentialV3SendRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialSendRequest_200_response'
          description: Credential request sent
      summary: Send credential request
      tags:
      - Issue Credential V3
  /agent/command/issue-credential-v3/retrieve-credential-application:
    get:
      description: |
        Retrieves the Credential Application object received by the agent.
      externalDocs:
        url: https://identity.foundation/waci-presentation-exchange/#issuance-2
      operationId: IssueCredentialV3RetrieveCredentialApplication
      responses:
        "200":
          description: Credential Application object
      summary: Retrieves the Credential Application object received by the agent.
      tags:
      - Issue Credential V3
  /agent/command/issue-credential-v3/issue:
    post:
      externalDocs:
        url: https://github.com/decentralized-identity/waci-presentation-exchange/blob/main/issue_credential/README.md#issue-credential
      operationId: IssueCredentialV3Issue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialV3Issue_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialIssue_200_response'
          description: Credential issued
      summary: Issue credential
      tags:
      - Issue Credential V3
  /agent/command/issue-credential-v3/store:
    post:
      operationId: IssueCredentialV3Store
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCredentialStore_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialStore_200_response'
          description: Credential stored
      summary: Store/accept credential
      tags:
      - Issue Credential V3
  /agent/command/revocation/revoke:
    post:
      operationId: RevocationRevokeCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevocationRevokeCredential_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: Credential revoked
      summary: Revoke Credential
      tags:
      - Revocation
  /agent/response/revocation-notification/{threadId}:
    get:
      operationId: RevocationGetNotificationByThreadId
      parameters:
      - description: The value of the `threadId` property in the revocation notification
          message
        explode: false
        in: path
        name: threadId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationGetNotificationByThreadId_200_response'
          description: Revocation Notification
      summary: Get revocation notification message based on the revocation notification
        message `thread_id` property.
      tags:
      - Revocation
  /agent/command/credential/{credentialId}:
    delete:
      operationId: CredentialDeleteById
      parameters:
      - explode: false
        in: path
        name: credentialId
        required: true
        schema:
          $ref: '#/components/schemas/CredentialId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: Credential Deleted
        "404":
          description: Credential not found
      summary: Delete credential by id
      tags:
      - Credential
    get:
      operationId: CredentialGetById
      parameters:
      - explode: false
        in: path
        name: credentialId
        required: true
        schema:
          $ref: '#/components/schemas/CredentialId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialGetById_200_response'
          description: Credential
        "404":
          description: Credential not found
      summary: Get credential by id
      tags:
      - Credential
  /agent/command/credential/revoked/{credentialId}:
    get:
      operationId: CredentialGetRevocationStatusById
      parameters:
      - explode: false
        in: path
        name: credentialId
        required: true
        schema:
          $ref: '#/components/schemas/CredentialId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialGetRevocationStatusById_200_response'
          description: Credential Revocation Status
        "404":
          description: Credential not found
      summary: Get Credential Revocation Status
      tags:
      - Credential
  /agent/command/proof/{presentationExchangeThreadId}:
    get:
      operationId: PresentProofGetByThreadId
      parameters:
      - explode: false
        in: path
        name: presentationExchangeThreadId
        required: true
        schema:
          $ref: '#/components/schemas/ThreadId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofOperationResponse'
          description: Presentation Exchange
        "404":
          description: Presentation exchange record not found
      summary: Get presentation exchange record by thread id
      tags:
      - Present Proof
  /agent/command/proof/send-proposal:
    post:
      description: |
        Send a `propose-presentation` message to connection with `connection_id` in body. When the backchannel sends a `send-proposal` operation to a backchannel it sends an `presentation-preview` inner message.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#propose-presentation
      operationId: PresentProofSendProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofSendProposal_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendProposal_200_response'
          description: Presentation proposal sent
      summary: Send presentation proposal
      tags:
      - Present Proof
  /agent/command/proof/send-request:
    post:
      description: |
        Send a `request-presentation` message to connection with `connection_id` in body. When the backchannel sends a `send-request` operation to a backchannel it sends the (almost) complete `request-presentation` message. However the data inside the proposal is not base64 encoded yet. See the [`proof_request_json`](https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1415-L1432) docs for expected contents of the data for Indy credentials.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
      operationId: PresentProofSendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofSendRequest_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendRequest_200_response'
          description: Presentation request sent
      summary: Send presentation request
      tags:
      - Present Proof
  /agent/command/proof/send-presentation:
    post:
      description: |
        Send a `presentation` message in response to presentation request with specified thread id. See the [`requested_credentials_json`](https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1433-L1445) docs for expected contents of the data for Indy credentials.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#presentation
      operationId: PresentProofSendPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofSendPresentation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendPresentation_200_response'
          description: Presentation sent
      summary: Send presentation
      tags:
      - Present Proof
  /agent/command/proof/verify-presentation:
    post:
      description: |
        Verify the received presentation with specified thread id.
      operationId: PresentProofVerifyPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofVerifyPresentation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofVerifyPresentation_200_response'
          description: Presentation verified
      summary: Verify presentation
      tags:
      - Present Proof
  /agent/command/proof-v2/send-request:
    post:
      description: |
        Send a `request-presentation` message to connection with `connection_id` in body.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0454-present-proof-v2/README.md#request-presentation
      operationId: PresentProofV2SendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofV2SendRequest_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendRequest_200_response'
          description: Presentation request sent
      summary: Send presentation request
      tags:
      - Present Proof V2
  /agent/command/proof-v2/send-presentation:
    post:
      description: |
        Send a `presentation` message in response to presentation request with specified thread id.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0454-present-proof-v2/README.md#presentation
      operationId: PresentProofV2SendPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofV2SendPresentation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendPresentation_200_response'
          description: Presentation sent
      summary: Send presentation
      tags:
      - Present Proof V2
  /agent/command/proof-v2/verify-presentation:
    post:
      description: |
        Verify the received presentation with specified thread id.
      operationId: PresentProofV2VerifyPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofVerifyPresentation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofV2VerifyPresentation_200_response'
          description: Presentation verified
      summary: Verify presentation
      tags:
      - Present Proof V2
  /agent/command/proof-v3/send-proposal:
    post:
      description: |
        Send a `propose-presentation` message to connection with `connection_id` in body.
      operationId: PresentProofV3SendProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofV3SendProposal_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendProposal_200_response'
          description: Presentation proposal sent
      summary: Send presentation proposal
      tags:
      - Present Proof V3
  /agent/command/proof-v3/send-request:
    post:
      description: |
        Send a `request-presentation` message, either as the start of a thread, or as an acceptance of a presentation proposal.
         - To accept a presentation proposal: include thread `id` in body.
         - To start a thread: include `connection_id` in body.
      operationId: PresentProofV3SendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofV3SendRequest_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendRequest_200_response'
          description: Presentation request sent
      summary: Send present-proof v3 presentation request
      tags:
      - Present Proof V3
  /agent/command/proof-v3/send-presentation:
    post:
      description: |
        Send a `presentation` message in response to presentation request with specified thread id.
      operationId: PresentProofV3SendPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofV2SendPresentation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofSendPresentation_200_response'
          description: Presentation sent
      summary: Send presentation
      tags:
      - Present Proof V3
  /agent/command/proof-v3/verify-presentation:
    post:
      description: |
        Verify the received presentation with specified thread id.
      operationId: PresentProofV3VerifyPresentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PresentProofVerifyPresentation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofV2VerifyPresentation_200_response'
          description: Presentation verified
      summary: Verify presentation
      tags:
      - Present Proof V3
  /agent/command/mediation/{connectionId}:
    get:
      operationId: CoordinateMediationGetByConnectionId
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinateMediationOperationResponse'
          description: Mediation record
        "404":
          description: Mediation record not found
      summary: Get mediation record by connection id
      tags:
      - Coordinate Mediation
  /agent/command/mediation/send-request:
    post:
      description: |
        Send a `mediate-request` message to connection with `connection_id` in body.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md#mediation-request
      operationId: CoordinateMediationSendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinateMediationOperationResponse'
          description: Mediate request message sent
      summary: Send mediation request message
      tags:
      - Coordinate Mediation
  /agent/command/mediation/send-grant:
    post:
      description: |
        Send a `mediate-grant` message to mediator with `mediation_id` in body.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md#mediation-grant
      operationId: CoordinateMediationSendGrant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinateMediationOperationResponse'
          description: Mediate grant message sent
      summary: Send mediation grant message
      tags:
      - Coordinate Mediation
  /agent/command/mediation/send-deny:
    post:
      description: |
        Send a `mediate-deny` message to mediator with `mediation_id` in body.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/main/features/0211-route-coordination/README.md#mediation-deny
      operationId: CoordinateMediationSendDeny
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoordinateMediationOperationResponse'
          description: Mediate grant message sent
      summary: Send mediation deny message
      tags:
      - Coordinate Mediation
  /agent/command/out-of-band/send-invitation-message:
    post:
      description: |
        Create an out of band invitation. If both `handshake_protocols` and `attachments` are not provided, backchannel should default to `handshake_protocols` value `["https://didcomm.org/didexchange/1.0"]`. This is legacy behaviour.
      operationId: OutOfBandCreateInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutOfBandCreateInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfBandCreateInvitation_200_response'
          description: Invitation created
      summary: Create a new out of band invitation
      tags:
      - Out of Band
  /agent/command/out-of-band/receive-invitation:
    post:
      operationId: OutOfBandReceiveInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutOfBandReceiveInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutOfBandReceiveInvitation_200_response'
          description: Invitation received
      summary: Receive an out of band invitation
      tags:
      - Out of Band
  /agent/command/did-exchange/{connectionId}:
    get:
      operationId: DidExchangeGetById
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DidExchangeGetById_200_response'
          description: DID Exchange Connection
        "404":
          description: Connection not found
      summary: Get did exchange connection by id
      tags:
      - DID Exchange
  /agent/response/did-exchange/{invitationId}:
    get:
      operationId: DidExchangeGetByInvitationId
      parameters:
      - description: The invitation `@id`
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DidExchangeGetByInvitationId_200_response'
          description: DID Exchange Connection
      summary: Get did exchange connection by invitation id. Can be used to determine
        the connection id based of an invitation id.
      tags:
      - DID Exchange
  /agent/command/did-exchange/create-request-resolvable-did:
    post:
      operationId: DidExchangeCreateRequestResolvableDid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DidExchangeCreateRequestResolvableDid_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DidExchangeGetByInvitationId_200_response'
          description: Request Sent
      summary: Send a did exchange request to the didcomm service registered in the
        public did
      tags:
      - DID Exchange
  /agent/command/did-exchange/receive-request-resolvable-did:
    post:
      operationId: DidExchangeReceiveRequestResolvableDid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DidExchangeReceiveRequestResolvableDid_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DidExchangeGetByInvitationId_200_response'
          description: Request Received
      summary: The documentation of this endpoint need to be looked at.
      tags:
      - DID Exchange
  /agent/command/did-exchange/send-request:
    post:
      operationId: DidExchangeSendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
          description: Request sent
      summary: Send a did exchange request to the connection with specified id.
      tags:
      - DID Exchange
  /agent/command/did-exchange/send-response:
    post:
      operationId: DidExchangeSendResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties: {}
          description: Response Sent
        "400":
          content:
            application/json:
              schema:
                properties: {}
          description: Error sending response. This should send a problem report
      summary: Send a did exchange response to the connection with specified id.
      tags:
      - DID Exchange
  /agent/command/oob-v2/create-invitation:
    post:
      operationId: DIDCommV2CreateInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DIDCommV2CreateInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDCommV2CreateInvitation_200_response'
          description: Invitation created
      summary: Create a new DIDComm V2 out of band invitation
      tags:
      - Out of Band V2
  /agent/command/oob-v2/accept-invitation:
    post:
      operationId: DIDCommV2AcceptInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DIDCommV2AcceptInvitation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Send_Indy_Proof_Request_data_presentation_request_allOf'
          description: Invitation accepted
      summary: Accept a DIDComm V2 out of band invitation
      tags:
      - Out of Band V2
  /agent/command/oob-v2/invitation-connection/{invitationId}:
    get:
      operationId: DIDCommV2GetByInvitationId
      parameters:
      - description: The invitation `@id`
        explode: false
        in: path
        name: invitationId
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Send_Indy_Proof_Request_data_presentation_request_allOf'
          description: Connection ID
      summary: Get connection ID of new connection created by a response to this invitation.
      tags:
      - Out of Band V2
components:
  schemas:
    ConnectionInvitation:
      example:
        '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation
        '@id': 11640bd1-cdc2-45e4-9fcc-43ccc27fc9d4
        serviceEndpoint: http://192.168.65.3:9021
        recipientKeys:
        - GqQh9pLeMrE7E2ZxA47GbW4XQuLYsyd1bdfZvxLi7aZ6
        label: aca-py
      title: Connection Invitation
      type: object
    ConnectionId:
      example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
      title: Connection Id
      type: string
    ThreadId:
      example: e7280776-5315-4569-8cac-42cae108adfe
      title: Thread Id
      type: string
    pthid:
      example: 5a7f69cf-ee3c-4a75-9975-1aa3c28db122
      title: pthid
      type: string
    MediatorId:
      example: 42cab98c-816c-4dec-8d8b-8da55dadaab9
      title: Mediator Id
      type: string
    SchemaId:
      example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
      title: Schema Id
      type: string
    CredentialDefinitionId:
      example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
      title: Credential Definition Id
      type: string
    IndyRevocationRegistryId:
      example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
      title: Indy Revocation Registry Id
      type: string
    IndyCredentialRevocationId:
      example: "12345"
      title: Indy Credential Revocation Id
      type: string
    ConnectionState:
      description: All possible connection state values
      enum:
      - invitation
      - request
      - response
      - active
      example: invitation
      title: Connection State
      type: string
    DidExchangeState:
      description: All possible did exchange state values
      enum:
      - start
      - invitation-sent
      - request-sent
      - request-received
      - response-sent
      - response-received
      - abandoned
      - completed
      example: invitation-sent
      title: Did Exchange State
      type: string
    OutOfBandInvitation:
      example:
        '@id': f3375429-b116-4224-b55f-563d7ef461f1
        '@type': https://didcomm.org/out-of-band/1.0/invitation
        label: Invitation created by http://host.docker.internal:9042
        services:
        - id: 86548a10-2b2a-47ce-b9cc-5e835e9add50
          type: did-communication
          recipientKeys:
          - did:key:z6MkurAvs5HUdN8ARq8indff9ZvVAHNMqWBEevrc82ydPLNh
          serviceEndpoint: http://host.docker.internal:9041
        accept:
        - didcomm/aip2;env=rfc19
        handshake_protocols:
        - https://didcomm.org/didexchange/1.0
      title: Out of Band Invitation
      type: object
    DIDCommV2Invitation:
      example:
        id: f3375429-b116-4224-b55f-563d7ef461f1
        type: https://didcomm.org/out-of-band/2.0/invitation
        from: did:orb:example.org:EiCRKRZKozDBAlxpZ0UI2UylXW6AmwSdQfguo0VGeyVKKg
        body:
          goal-code: streamlined-vc
          accept:
          - didcomm/v2
      title: DIDComm V2 Out of Band Invitation
      type: object
    GoalCode:
      example: streamlined-vc
      title: DIDComm V2 Out of Band Invitation Goal Code
      type: string
    Connection:
      example: {}
      title: Connection
      type: object
    ConnectionResponse:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        connection: {}
        state: invitation
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          $ref: '#/components/schemas/ConnectionState'
        connection:
          example: {}
          title: Connection
          type: object
      required:
      - connection_id
      - state
      title: Connection Response
      type: object
    DidMethod:
      example: key
      title: Did method
      type: string
    ProofType:
      example: Ed25519Signature2018
      title: Proof type
      type: string
    FullDid:
      example: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
      title: Fully qualified did
      type: string
    Did:
      example: Y9oNbFNTgxrRuvxQk3xEzr
      title: DID
      type: string
    Verkey:
      example: HymVhRozF7o9Sh9iyKXu5WKHP95YERhrpZxGx5d6WhYw
      title: Verkey
      type: string
    Comment:
      example: Hello World
      title: Comment
      type: string
    SchemaName:
      example: test_schema
      title: Schema Name
      type: string
    SchemaVersion:
      example: 1.0.0
      title: Schema Version
      type: string
    SchemaAttributes:
      example:
      - attr_1
      - attr_2
      - attr_3
      items:
        type: string
      title: Schema Attributes
      type: array
    Schema:
      description: Schema definition
      example:
        ver: "1.0"
        id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
        name: test_schema
        version: 1.0.0
        attrNames:
        - attr_1
        - attr_2
        - attr_3
        seqNo: 11
      title: Schema
      type: object
    W3CCredential:
      example:
        '@context':
        - https://www.w3.org/2018/credentials/v1
        - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.edu/credentials/1872
        type:
        - VerifiableCredential
        - AlumniCredential
        issuer: https://example.edu/issuers/565049
        issuanceDate: 2010-01-01T19:73:24Z
        credentialSubject:
          id: did:example:ebfeb1f712ebc6f1c276e12ec21
          alumniOf:
            id: did:example:c276e12ec21ebfeb1f712ebc6f1
            name:
            - value: Example University
              lang: en
            - value: Exemple d'Université
              lang: fr
        proof:
          type: RsaSignature2018
          created: 2017-06-18T21:19:10Z
          proofPurpose: assertionMethod
          verificationMethod: https://example.edu/issuers/keys/1
          jws: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TCYt5X sITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUc
            X16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtj
            PAYuNzVBAh4vGHSrQyHUdBBPM
      externalDocs:
        url: https://www.w3.org/TR/vc-data-model/
      title: W3C Verifiable Credential
      type: object
    CredentialPreview:
      example:
        '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
        attributes:
        - name: attr_1
          value: value_1
        - name: attr_2
          value: value_2
        - name: attr_3
          value: "10"
      properties:
        '@type':
          enum:
          - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
          example: did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/CredentialPreview_attributes_inner'
          type: array
      required:
      - '@type'
      - attributes
      title: Credential Preview
      type: object
    AttachmentFormat:
      enum:
      - indy
      - json-ld
      example: indy
      title: Attachment Format
      type: string
    IssueCredentialState:
      description: All possible issue credential state values
      enum:
      - proposal-sent
      - proposal-received
      - offer-sent
      - offer-received
      - request-sent
      - request-received
      - credential-issued
      - credential-received
      - done
      example: proposal-sent
      title: Issue Credential State
      type: string
    CredentialDefinition:
      example:
        ver: "1.0"
        id: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
        schemaId: "12"
        type: CL
        tag: default
        value:
          primary:
            "n": "127473542495438147573510476102476902133854813754098957204867619522405674317018859941864352419933227338200593131633863547249552725335523634158360861379038920996404174540285309296147612235783265529767167904996672533424299318502061201785710802874714294174143582682739350240229266415073900875507216317608608419590749758007624873612987354273561597672087026667313974344205743513108098303412867935178289607206971675919540105355234142077505442787841104628317493214564810784261197466701597725036470989697050855442369151927195340336984787674149053901429543050018150008478471976322268372173725164950897146486534208375313658743913"
            s: "65818689269823967224337061200277779392234203780958681071979765611348839168322943966737475112261896111357320138778757065891281921197440097002615498509033425652242864586741386765592821062979097745378937128174004971762786640103105629442159475365159836976073886029307851026908970994829903300109597230301114225997246242679312570675015835522760053319269527084928663538396971295690506335377466402252848447042892658905613203874434705837943677780063921041179819697545228811016183063967989936330561640506841490120102577693339579651117393959310406568508979515298779995407222937217220638869118337307458754771745779882842551583957"
            r:
              attr_2: "51288787261098209501918361017434738039396559240181084024072376043981733617197124422285362785531867106205259059511012989265257750815057229625776239902268148159240026351692626846471237370316944382717070664579921786642246297025320221128643932326231901994502071437080527938105845057316611594317815585962995630440264494906187392024263524589040353791190656247954182173035217728619640076109690946048473714974821555775006753553400010494644755834190135206012433445625838647683519920548605994424810625611229251495082321603992265565001261836732982193329161683683007877406661513473331737004850593281692214631901319662119982702922"
              attr_3: "49181762688290033657446628790584551868718995111464422170653915452393747911840814545440872765372893672471205136395434982292712460522218700053539095558984733806664620823639102136028452144009159713045675694364042524060684443787233750663981609531778189390047496947791414470032823060753313065437518080235878845351585405484399614405394732610591997574454401630571733355205236989435994214291321960467589480432939966179940916409629940016780143983651757105859829934723575147299207641665320314894905208079668584551936316156492573527926041185621509809863665431708246846967753137673120991441299733316834328405117780995288938831960"
              master_secret: "55538424482357179006904475057212929303648337854551436067860163418580875286658754309614134356521736148588690128194367442517503542151131893353616029898291001113787008415246944257559064252055726634969959428779277791311649310859911986025543178916305739383261726815449892298017969062336790138195201464646418205024584174631846494837622469674261184752618226770681209326126925275817705162548925201642177095627695920338858257041172323289863931904819081634906164566038325643344387794492965878883835475209080317985881686751050847796692787879655322665209901159744163351765059041544796505393057421762647235069315054477528853561473"
              attr_1: "30886155743965686596111154816080405248462718126264612304549353774874576024335575570672949599223811931464968785591555429018481986959035338465010646916129018856811265590112946954474656478128827689132913637543377270592217574931365985240940393300396509940083648506176813465677576969450791064392913905672340945666537607742715770967118252787128981065813564952993994324545119742090220379288320480251447895567821617698929571634776885837657497224943766401548060195388838088667649983419151624233451714099262934942791309973082062184242430968684229937149556567677716686322793149698990735633517128615499672788711239033452193882997"
            rctxt: "118794108011306418186599966013685417259067451572329168338986396401718511272829290486080995212827126457817056257265484527810068143652813250691318847597106924333754555635689923547896416240741937417433198117397677657367813549201117642415892893893381488036182474297804412028150810635810333104761444058436184382989414463435135399687357899136817489918140316906972132553030427022094507232967240719401668656063683319995507797481327116566453773630750501126563798296642025598222840921566196961717932895723665756200235727569096614264333988899662958311074895571782854329655460918882500227649533684869211196542823703742125337784110"
            z: "105630626525262054412237755083369001506042501169646719098603962721650276426684319172879455142677137798560163792358891628363088368803209632822777508716551660571988904519705987074094883201485589766095616179828793397893771789008873400971460093284769835475804783847161628863255694379113641839797171437881461956336479878362639116657891310026976287218412427465483710278481629012528677992951433715775723708478290067190705706789707748967166740980626023098110954588495187304096367803794208972671801623501450811525547654409352588261071510140289955775228914918919001173412112332959725654909432886608249741918119912786853133051762"
      title: Credential Definition
      type: object
    IssueCredentialOperationResponse:
      example:
        thread_id: e7280776-5315-4569-8cac-42cae108adfe
        state: proposal-sent
        credential_id: 828761d2-65e9-44a5-852e-1f60b943ab65
      properties:
        state:
          $ref: '#/components/schemas/IssueCredentialState'
        thread_id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        credential_id:
          example: 828761d2-65e9-44a5-852e-1f60b943ab65
          title: Credential Id
          type: string
      required:
      - state
      - thread_id
      title: Issue Credential Operation Response
      type: object
    CredentialId:
      example: 828761d2-65e9-44a5-852e-1f60b943ab65
      title: Credential Id
      type: string
    PresentProofOperationResponse:
      example:
        thread_id: e7280776-5315-4569-8cac-42cae108adfe
        state: proposal-sent
      properties:
        state:
          $ref: '#/components/schemas/PresentProofState'
        thread_id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - state
      - thread_id
      title: Present Proof Operation Response
      type: object
    PresentProofState:
      description: All possible present proof state values
      enum:
      - proposal-sent
      - proposal-received
      - request-sent
      - request-received
      - presentation-sent
      - presentation-received
      - reject-sent
      - done
      example: proposal-sent
      title: Present Proof State
      type: string
    PresentationPreview:
      example:
        attributes:
        - name: attr_1
          cred_def_id: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          value: value_1
          referent: "0"
        predicates:
        - name: attr_2
          cred_def_id: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          predicate: '>='
          treshold: "100"
      properties:
        '@type':
          enum:
          - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview
          example: did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/PresentationPreview_attributes_inner'
          type: array
        predicates:
          items:
            $ref: '#/components/schemas/PresentationPreview_predicates_inner'
          type: array
      required:
      - '@type'
      - attributes
      - predicates
      title: Presentation Preview
      type: object
    PresentationRequestMessage:
      example:
        comment: This is a comment for the request for presentation.
        proof_request:
          data:
            requested_attributes:
              attr_1:
                name: attr_1
                restrictions:
                - schema_name: test_schema
                  schema_version: 1.0.0
            requested_predicates:
              attr_3:
                name: attr_3
                p_type: '>'
                p_value: 8
                restrictions:
                - schema_name: test_schema
                  schema_version: 1.0.0
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
      title: Presentation Request Message
      type: object
    RequestedCredentials:
      example:
        requested_attributes:
          attr_1:
            revealed: true
            cred_id: 828761d2-65e9-44a5-852e-1f60b943ab65
        requested_predicates:
          attr_3:
            cred_id: 828761d2-65e9-44a5-852e-1f60b943ab65
      externalDocs:
        url: https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1433-L1445
      title: Requested Credentials
      type: object
    PresentProofV2SendRequestIndy:
      properties:
        format:
          enum:
          - indy
          type: string
        comment:
          example: Hello World
          title: Comment
          type: string
        data:
          example:
            name: Biological Indicator A Proof
            requested_attributes:
              bioindicators_attrs:
                names:
                - name
                restrictions:
                - schema_name: Schema_Biological_Indicators
                  schema_version: 0.2.0
            requested_predicates:
              concentration:
                name: concentration
                p_type: '>'
                p_value: 1
                restrictions:
                - schema_name: Schema_Biological_Indicators
                  schema_version: 0.2.0
            version: 0.2.0
          title: Indy Proof Request
          type: object
      required:
      - data
      - format
    PresentProofV2SendRequestDIF:
      properties:
        format:
          enum:
          - json-ld
          type: string
        comment:
          example: Hello World
          title: Comment
          type: string
        data:
          example:
            options:
              challenge: 9a7e9aa6-9e8f-4b6b-9911-bfec18cfa208
              domain: dajj33j3aj3j
            presentation_definition:
              id: 5ab84299-c066-4b34-bcc6-d356aa44c826
              format:
                ldp_vp:
                  proof_type:
                  - Ed25519Signature2018
              input_descriptors:
              - id: citizenship_input_1
                name: EU Driver's License
                schema:
                - uri: https://www.w3.org/2018/credentials#VerifiableCredential
                - uri: https://w3id.org/citizenship#PermanentResident
                constraints:
                  fields:
                  - path:
                    - $.credentialSubject.familyName
                    purpose: Just making sure your family name is Smith
                    filter:
                      type: string
                      const: SMITH
                  - path:
                    - $.credentialSubject.givenName
                    purpose: We also want to know your first name
          title: DIF Presentation Definition
          type: object
      required:
      - data
      - format
    IssueCredentialV2AttachFormatLdProofDetail:
      example:
        credential:
          '@context':
          - https://www.w3.org/2018/credentials/v1
          - https://w3id.org/security/bbs/v1
          - dl: http://example.com/drivers-license#
            AATHDriversLicense: dl:AATHDriversLicense
            address: dl:address
            DL_number: dl:DL_number
            expiry: dl:expiry
            age: dl:age
          type:
          - VerifiableCredential
          - AATHDriversLicense
          issuer: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
          issuanceDate: 2010-01-01T19:73:24Z
          credentialSubject:
            address: "947 this street, Kingston Ontario Canada, K9O 3R5"
            DL_number: "09385029529385"
            expiry: 10/12/2022
            age: "30"
        options:
          proofType: Ed25519Signature2018
      type: object
    IssueCredentialV2AttachFormatIndyCredFilter:
      properties:
        schema_issuer_did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        schema_name:
          example: test_schema
          title: Schema Name
          type: string
        schema_version:
          example: 1.0.0
          title: Schema Version
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        issuer_did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
      type: object
    IssueCredentialV2CredentialProposalFilter:
      properties:
        indy:
          $ref: '#/components/schemas/IssueCredentialV2AttachFormatIndyCredFilter'
        json-ld:
          example:
            credential:
              '@context':
              - https://www.w3.org/2018/credentials/v1
              - https://w3id.org/security/bbs/v1
              - dl: http://example.com/drivers-license#
                AATHDriversLicense: dl:AATHDriversLicense
                address: dl:address
                DL_number: dl:DL_number
                expiry: dl:expiry
                age: dl:age
              type:
              - VerifiableCredential
              - AATHDriversLicense
              issuer: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
              issuanceDate: 2010-01-01T19:73:24Z
              credentialSubject:
                address: "947 this street, Kingston Ontario Canada, K9O 3R5"
                DL_number: "09385029529385"
                expiry: 10/12/2022
                age: "30"
            options:
              proofType: Ed25519Signature2018
          type: object
      title: Issue Credential V2 Credential Proposal Filter
    CoordinateMediationState:
      description: All possible coordinate mediation state values
      enum:
      - request-sent
      - request-received
      - grant-sent
      - grant-received
      - deny-sent
      - deny-received
      example: request-sent
      title: Coordinate Mediation State
      type: string
    CoordinateMediationOperationResponse:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: request-sent
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          $ref: '#/components/schemas/CoordinateMediationState'
      required:
      - connection_id
      - state
      title: Coordinate Mediation Operation Response
      type: object
    StatusGet_200_response:
      example:
        status: active
      properties:
        status:
          enum:
          - active
          type: string
    StatusGet_418_response:
      properties:
        status:
          enum:
          - inactive
          type: string
      required:
      - status
    AgentStart_request_data_parameters:
      properties:
        mime-type:
          example: didcomm/v2
          type: string
        inbound_transports:
          example:
          - ws
          - http
          items:
            enum:
            - ws
            - http
            type: string
          type: array
        outbound_transports:
          example:
          - ws
          - http
          items:
            enum:
            - ws
            - http
            type: string
          type: array
      type: object
    AgentStart_request_data:
      properties:
        parameters:
          $ref: '#/components/schemas/AgentStart_request_data_parameters'
      required:
      - parameters
      type: object
    AgentStart_request:
      properties:
        data:
          $ref: '#/components/schemas/AgentStart_request_data'
      required:
      - data
      type: object
    ConnectionCreateInvitation_request_data:
      properties:
        mediator_connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      type: object
    ConnectionCreateInvitation_request:
      properties:
        data:
          $ref: '#/components/schemas/ConnectionCreateInvitation_request_data'
      required:
      - data
      type: object
    ConnectionCreateInvitation_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        invitation:
          '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation
          '@id': 11640bd1-cdc2-45e4-9fcc-43ccc27fc9d4
          serviceEndpoint: http://192.168.65.3:9021
          recipientKeys:
          - GqQh9pLeMrE7E2ZxA47GbW4XQuLYsyd1bdfZvxLi7aZ6
          label: aca-py
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        invitation:
          example:
            '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation
            '@id': 11640bd1-cdc2-45e4-9fcc-43ccc27fc9d4
            serviceEndpoint: http://192.168.65.3:9021
            recipientKeys:
            - GqQh9pLeMrE7E2ZxA47GbW4XQuLYsyd1bdfZvxLi7aZ6
            label: aca-py
          title: Connection Invitation
          type: object
      required:
      - connection_id
      - invitation
    ConnectionReceiveInvitation_request_data_allOf:
      properties:
        mediator_connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
    ConnectionReceiveInvitation_request_data:
      allOf:
      - $ref: '#/components/schemas/ConnectionInvitation'
      - $ref: '#/components/schemas/ConnectionReceiveInvitation_request_data_allOf'
    ConnectionReceiveInvitation_request:
      properties:
        data:
          $ref: '#/components/schemas/ConnectionReceiveInvitation_request_data'
      required:
      - data
      type: object
    ConnectionReceiveInvitation_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: invitation
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          $ref: '#/components/schemas/ConnectionState'
      type: object
    ConnectionAcceptInvitation_request:
      properties:
        id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - id
      type: object
    ConnectionAcceptInvitation_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: ""
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - example: request
      type: object
    ConnectionAcceptRequest_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: ""
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - example: response
      type: object
    ConnectionSendPing_request_data:
      properties:
        comment:
          example: Hello World
          title: Comment
          type: string
      required:
      - comment
      type: object
    ConnectionSendPing_request:
      properties:
        id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        data:
          $ref: '#/components/schemas/ConnectionSendPing_request_data'
      required:
      - data
      - id
      type: object
    DIDGetPublic_200_response:
      example:
        verkey: HymVhRozF7o9Sh9iyKXu5WKHP95YERhrpZxGx5d6WhYw
        did: Y9oNbFNTgxrRuvxQk3xEzr
      properties:
        did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
        verkey:
          example: HymVhRozF7o9Sh9iyKXu5WKHP95YERhrpZxGx5d6WhYw
          title: Verkey
          type: string
      type: object
    SchemaCreate_request_data:
      properties:
        schema_name:
          example: test_schema
          title: Schema Name
          type: string
        schema_version:
          example: 1.0.0
          title: Schema Version
          type: string
        attributes:
          example:
          - attr_1
          - attr_2
          - attr_3
          items:
            type: string
          title: Schema Attributes
          type: array
      required:
      - attributes
      - schema_name
      - schema_version
      type: object
    SchemaCreate_request:
      properties:
        data:
          $ref: '#/components/schemas/SchemaCreate_request_data'
      required:
      - data
      type: object
    SchemaCreate_200_response:
      example:
        schema:
          ver: "1.0"
          id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          name: test_schema
          version: 1.0.0
          attrNames:
          - attr_1
          - attr_2
          - attr_3
          seqNo: 11
        schema_id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
      properties:
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        schema:
          description: Schema definition
          example:
            ver: "1.0"
            id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
            name: test_schema
            version: 1.0.0
            attrNames:
            - attr_1
            - attr_2
            - attr_3
            seqNo: 11
          title: Schema
          type: object
      type: object
    CredentialDefinitionCreate_request_data:
      properties:
        support_revocation:
          example: false
          type: boolean
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        tag:
          example: default
          type: string
      required:
      - schema_id
      - support_revocation
      - tag
      type: object
    CredentialDefinitionCreate_request:
      properties:
        data:
          $ref: '#/components/schemas/CredentialDefinitionCreate_request_data'
      required:
      - data
      type: object
    CredentialDefinitionCreate_200_response:
      example:
        credential_definition_id: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
      properties:
        credential_definition_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
    IssueCredentialSendProposal_request_data:
      properties:
        comment:
          example: Hello World
          title: Comment
          type: string
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        schema_issuer_did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        schema_name:
          example: test_schema
          title: Schema Name
          type: string
        schema_version:
          example: 1.0.0
          title: Schema Version
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        issuer_did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - connection_id
      type: object
    IssueCredentialSendProposal_request:
      properties:
        data:
          $ref: '#/components/schemas/IssueCredentialSendProposal_request_data'
      required:
      - data
      type: object
    IssueCredentialSendProposal_200_response_allOf:
      properties:
        state:
          example: proposal-sent
    IssueCredentialSendProposal_200_response:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialSendProposal_200_response_allOf'
    Create_Offer_to_start_credential_issuance_flow_data:
      properties:
        comment:
          example: Hello World
          title: Comment
          type: string
        credential_preview:
          $ref: '#/components/schemas/CredentialPreview'
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
      required:
      - cred_def_id
      - credential_preview
      type: object
    Create_Offer_to_start_credential_issuance_flow:
      properties:
        data:
          $ref: '#/components/schemas/Create_Offer_to_start_credential_issuance_flow_data'
      required:
      - data
      title: Create Offer to start credential issuance flow
    IssueCredentialCreateOffer_request:
      anyOf:
      - $ref: '#/components/schemas/Create_Offer_to_start_credential_issuance_flow'
      type: object
    IssueCredentialCreateOffer_200_response_record_allOf:
      properties:
        state:
          example: offer-sent
    IssueCredentialCreateOffer_200_response_record:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialCreateOffer_200_response_record_allOf'
    IssueCredentialCreateOffer_200_response:
      example:
        record: null
        message:
          '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential
          '@id': be02fa0b-3177-4202-ba40-76f29e992541
          "~thread": {}
          offers~attach:
          - '@id': libindy-cred-offer-0
            mime-type: application/json
            data:
              base64: eyJzY2hlbWFfaWQiOiAiV1ZxcHBVdjlYM1d5V0dyYm5zNVVpYToyOkV4YW1wbGU6MS4wIiwgImNyZWRfZGVmX2lkIjogIkVoeDNSWlNWMzhwbjNNWXZ4dEhoYlE6MzpDTDoyMTM3ODE6ZGVmYXVsdCIsICJrZXlfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiMzQzMzE3Njc5MzU5MTI2MTAyNDU5Mzg4OTM5MzU4OTY1MzIzNzMxNTA1NDcyMjAyOTAzMjYzNjQzMjMwNzkwODUxMDY5MjI5MDMyMjEiLCAieHpfY2FwIjogIjY1ODkyMjE5MDg3Njc2NTIzMTI2NjY2MTExMTc5Njg2OTE4MDQ2NjI2MjAzNzcyNTU0NDYwOTYzMTI4NzYxMjU4OTI3MTYwNjI0MTY3NzE4ODgyMjYxMzEwNDA5NTc3OTAwMDU4OTc5NTk5NzcyODU5NTk2NzY0NTMwNjE3MzAxNzYzMDc1MDk1NTg1MjQ1MjQwMzI1MTIzNTE5ODUyNjU1Mjg4MDQ2MDQ0ODIwMzIwMjc5MjY4OTA4NTczMTc1ODAwODM2ODU3MTUzMjA0NjYyMDM5NTQwNTc5NjY4Nzk5MzY1OTczOTQ0MjYxOTg4NjY3OTM0MDQyODkzOTYyMDQyOTgyOTUwMjE3MTUxNTU0MDEzNTg3MjcwMzg4MTE3NDE1MDM5NzY4Mjk2NTYwNDU0NTk1MDc5NDEyNTg5MzY5NzAzNDIzNDE3NDE3OTEwMDI5MDM2MjE0MzA5OTMxODU2NjMwMzcxNTQzNzg2NTc5Njg3NTE4NTU0MDU2ODYwMjUxMTkxMjgyMjI1MDQ1NzU4MjQwNjIwMDMxMTAyMDI1NDc0MzE0MzY3NjUzOTI5ODg0Njk2MDQwMzQ0NTEyMDA4NzE1MzIxODYyMDc2NjIyMTYxNDM3Mzk1MDI4ODI4MzMxMzUwMDkxNDA5MTAyMDQ0ODg2ODcxMzE1NzkwNzYwOTMyMjE1OTg3MTg2MzMyNjg2MzcwNTU3MDgwOTk1MjU2NTgwMjA3NDE4MzgzNDcxMjI3ODE3MjkwNjE2MjUzOTA4ODA0NzIzODA2MDIxMjQ0Nzc0MTg1MzEwNzQzMjk4NDQ5MjAyNTIyMTczMDk5MDk5NDAxMDkzNTU1NzEyNDEzNDYwNDA2MzAzMjY2MDc0NDg3NTU0ODA5NzQ5NTg0MzMyMTQyNDM2NTUzMTE3MDI5NTA2MiIsICJ4cl9jYXAiOiBbWyJleGFtcGxlIiwgIjQ3OTQzOTIzNTUxMzk1Mjk0MDExOTEwNjExMDYxODM3OTEzNzU4MjAwODk2MzU0OTk3NDYxMjUzNjQxNDc3NjQzOTczNTcwNjY2OTgzMTkyNzg1Nzg5MzYzODEyMjk3NDY2MjA1ODE4NDQ0MTAzNzM3MjcwMzA0NjY3NjU3MTYxMjA2MzczODk2NDQ1OTUwMDcwMzcxNjQ3MjQ5MDIxNjk3NDA4MDkxNTc0MTQzODI1ODY2NzYyMzI5MDU4MDM2MzQ3Mjc1NjY1OTE1NjEwMTIxNDYxMDc2NTg3MDE4NTcwMTg5MTUzNzg4NTQ0NTM5NjY5NjY0NjAzODA5MTYzODYzNzMzODEwODI5NTQ0Njc1ODk1MDc2MTgyODA1NDc4MTMxMTMzMDg5NDEzMDU2MDgyNTUwMjE3Njk2ODMyNTg5Nzk2NzI1NzM0MTQ0OTg2MTI3OTc4NzEyMTQ5NDM4ODE1NzA2MDM0NzY4NTg2NzQ3MzM2MjMwMzk4NDAxMTU5NTA4NzgzMTQ5MDMyMDY5NTUzODQxMDE1NzE5NDk4MjE2OTEyNDAzMDcyMTMxNzgyMjg2MDE2MzIzMDY1ODMxMDUxMDU0MTIyNzMwODU0Njk1NzMyMzAyNzc0ODgwMTcyNTI0OTk3NTk0MjE1MjE1NzI2MTU1MjY5Mzk3MTUxMDg5NzE2MTc1MjQxMzg0NTEwMTI3MjI5NDI5OTcyNzU2NzMzMzIyODg5MjgxODUxNjMxNzcxNTAwOTA5ODkzNTgxNDA2MzQ4MTgxODc2NDk3NjQ2OTE5MTIzNDI1NzIwNTQ5MjE1MDE4NzE4Mzg1NjAxNTcwMzE5NzQ4MjAwMDgyMDk2MzQzMTIzMTE2NjU3NTU4ODMxODU1NjQ2NjU1NTQ2ODI5Mjk5NjQzMjM0OTYxODAwMTg4MiJdLCBbIm1hc3Rlcl9zZWNyZXQiLCAiMzg0NzYyNzI1ODkxMDM5MDIzNjUyNjUzMDU0MzAxNDUzOTk1MDk2NTAwMTQxNzQxNDQ5OTIyODY5OTEwNTc5NDU3OTE1MTAxNTU4NzgwODQ3MzU1NTMxMjgyOTI1MTQ5NTA1NzA3NDM4OTQyMDAyODk1NjQ4ODA5MTgyODAxOTc2ODgyMDMxMTcxNTMwNTYwODc5NDQ2ODczMjg3NzA2MTY5OTEzODA0MTY1Nzg4Njc2OTY4MDI3MTI4NTE4MDcyMjU2NTAxMjUxMzQ4Nzc4NzM3MzE4NzAyMTAxODE1NTU0NzE0ODQ4NjQ1NTA5MTczMjQ1NDYzOTE0NTM3MjYzODA5NzAwNDc2NjM2NzE2OTQ1NjgxNTMzMTA2MTM3MjY5MDc1MzY5MjEwOTExNTc5NDY5MTc3NjI5MjA0NDA0MjQ4MTA2MzExNzI5MjE1MTQ4ODM4MTc1NDcwMDg1ODE5OTk2MTk5MjQ0MDA5MTQ5ODg3NzMzMjQ0NjU1NzMxODYyNjYwODAwNzU1MTUxNTkwNDI0MDY0NjIwMTE5OTk5NjM3NjUyNTkxMTgwMDA3MDA2ODcyMTkzMTUzODM2OTg3MDQ5MjQyNzYyNDMwMjE3NTc2NDI2ODM1MzIyODQxNzIyMTE3ODY1Njg2MzMzOTE1NjYzMDgwODI5NTQ3MTY1NTYwMTY2ODMyODgzODgxNjc1MDY2MjUxOTM3NDA5Njk4NTE0NzkyMDYyNDgwMzQxMTUxMTkwMTk5MjcwOTkyMDgzOTgyNTIzMzI0MzU5OTUyNjUyMzQ5MDY5ODE5NTEyOTQwMzUwMzM2NDMwOTE4OTMwODQ2MjA4MTMxNzEzNDI0NTczNzY4NDQ0ODE2Njc4MTM4OTM2MTUyNzY1MzQwOTA4ODM5MTA2MjkyOTcyNTM2MjIzMjEyIl1dfSwgIm5vbmNlIjogIjE5MDU3NTc5MDc0ODIyODA1NTkzODA4MSJ9
          credential_preview:
            '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
            attributes:
            - name: example
              mime-type: image/jpeg
              value: martini
      properties:
        message:
          example:
            '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/offer-credential
            '@id': be02fa0b-3177-4202-ba40-76f29e992541
            "~thread": {}
            offers~attach:
            - '@id': libindy-cred-offer-0
              mime-type: application/json
              data:
                base64: eyJzY2hlbWFfaWQiOiAiV1ZxcHBVdjlYM1d5V0dyYm5zNVVpYToyOkV4YW1wbGU6MS4wIiwgImNyZWRfZGVmX2lkIjogIkVoeDNSWlNWMzhwbjNNWXZ4dEhoYlE6MzpDTDoyMTM3ODE6ZGVmYXVsdCIsICJrZXlfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiMzQzMzE3Njc5MzU5MTI2MTAyNDU5Mzg4OTM5MzU4OTY1MzIzNzMxNTA1NDcyMjAyOTAzMjYzNjQzMjMwNzkwODUxMDY5MjI5MDMyMjEiLCAieHpfY2FwIjogIjY1ODkyMjE5MDg3Njc2NTIzMTI2NjY2MTExMTc5Njg2OTE4MDQ2NjI2MjAzNzcyNTU0NDYwOTYzMTI4NzYxMjU4OTI3MTYwNjI0MTY3NzE4ODgyMjYxMzEwNDA5NTc3OTAwMDU4OTc5NTk5NzcyODU5NTk2NzY0NTMwNjE3MzAxNzYzMDc1MDk1NTg1MjQ1MjQwMzI1MTIzNTE5ODUyNjU1Mjg4MDQ2MDQ0ODIwMzIwMjc5MjY4OTA4NTczMTc1ODAwODM2ODU3MTUzMjA0NjYyMDM5NTQwNTc5NjY4Nzk5MzY1OTczOTQ0MjYxOTg4NjY3OTM0MDQyODkzOTYyMDQyOTgyOTUwMjE3MTUxNTU0MDEzNTg3MjcwMzg4MTE3NDE1MDM5NzY4Mjk2NTYwNDU0NTk1MDc5NDEyNTg5MzY5NzAzNDIzNDE3NDE3OTEwMDI5MDM2MjE0MzA5OTMxODU2NjMwMzcxNTQzNzg2NTc5Njg3NTE4NTU0MDU2ODYwMjUxMTkxMjgyMjI1MDQ1NzU4MjQwNjIwMDMxMTAyMDI1NDc0MzE0MzY3NjUzOTI5ODg0Njk2MDQwMzQ0NTEyMDA4NzE1MzIxODYyMDc2NjIyMTYxNDM3Mzk1MDI4ODI4MzMxMzUwMDkxNDA5MTAyMDQ0ODg2ODcxMzE1NzkwNzYwOTMyMjE1OTg3MTg2MzMyNjg2MzcwNTU3MDgwOTk1MjU2NTgwMjA3NDE4MzgzNDcxMjI3ODE3MjkwNjE2MjUzOTA4ODA0NzIzODA2MDIxMjQ0Nzc0MTg1MzEwNzQzMjk4NDQ5MjAyNTIyMTczMDk5MDk5NDAxMDkzNTU1NzEyNDEzNDYwNDA2MzAzMjY2MDc0NDg3NTU0ODA5NzQ5NTg0MzMyMTQyNDM2NTUzMTE3MDI5NTA2MiIsICJ4cl9jYXAiOiBbWyJleGFtcGxlIiwgIjQ3OTQzOTIzNTUxMzk1Mjk0MDExOTEwNjExMDYxODM3OTEzNzU4MjAwODk2MzU0OTk3NDYxMjUzNjQxNDc3NjQzOTczNTcwNjY2OTgzMTkyNzg1Nzg5MzYzODEyMjk3NDY2MjA1ODE4NDQ0MTAzNzM3MjcwMzA0NjY3NjU3MTYxMjA2MzczODk2NDQ1OTUwMDcwMzcxNjQ3MjQ5MDIxNjk3NDA4MDkxNTc0MTQzODI1ODY2NzYyMzI5MDU4MDM2MzQ3Mjc1NjY1OTE1NjEwMTIxNDYxMDc2NTg3MDE4NTcwMTg5MTUzNzg4NTQ0NTM5NjY5NjY0NjAzODA5MTYzODYzNzMzODEwODI5NTQ0Njc1ODk1MDc2MTgyODA1NDc4MTMxMTMzMDg5NDEzMDU2MDgyNTUwMjE3Njk2ODMyNTg5Nzk2NzI1NzM0MTQ0OTg2MTI3OTc4NzEyMTQ5NDM4ODE1NzA2MDM0NzY4NTg2NzQ3MzM2MjMwMzk4NDAxMTU5NTA4NzgzMTQ5MDMyMDY5NTUzODQxMDE1NzE5NDk4MjE2OTEyNDAzMDcyMTMxNzgyMjg2MDE2MzIzMDY1ODMxMDUxMDU0MTIyNzMwODU0Njk1NzMyMzAyNzc0ODgwMTcyNTI0OTk3NTk0MjE1MjE1NzI2MTU1MjY5Mzk3MTUxMDg5NzE2MTc1MjQxMzg0NTEwMTI3MjI5NDI5OTcyNzU2NzMzMzIyODg5MjgxODUxNjMxNzcxNTAwOTA5ODkzNTgxNDA2MzQ4MTgxODc2NDk3NjQ2OTE5MTIzNDI1NzIwNTQ5MjE1MDE4NzE4Mzg1NjAxNTcwMzE5NzQ4MjAwMDgyMDk2MzQzMTIzMTE2NjU3NTU4ODMxODU1NjQ2NjU1NTQ2ODI5Mjk5NjQzMjM0OTYxODAwMTg4MiJdLCBbIm1hc3Rlcl9zZWNyZXQiLCAiMzg0NzYyNzI1ODkxMDM5MDIzNjUyNjUzMDU0MzAxNDUzOTk1MDk2NTAwMTQxNzQxNDQ5OTIyODY5OTEwNTc5NDU3OTE1MTAxNTU4NzgwODQ3MzU1NTMxMjgyOTI1MTQ5NTA1NzA3NDM4OTQyMDAyODk1NjQ4ODA5MTgyODAxOTc2ODgyMDMxMTcxNTMwNTYwODc5NDQ2ODczMjg3NzA2MTY5OTEzODA0MTY1Nzg4Njc2OTY4MDI3MTI4NTE4MDcyMjU2NTAxMjUxMzQ4Nzc4NzM3MzE4NzAyMTAxODE1NTU0NzE0ODQ4NjQ1NTA5MTczMjQ1NDYzOTE0NTM3MjYzODA5NzAwNDc2NjM2NzE2OTQ1NjgxNTMzMTA2MTM3MjY5MDc1MzY5MjEwOTExNTc5NDY5MTc3NjI5MjA0NDA0MjQ4MTA2MzExNzI5MjE1MTQ4ODM4MTc1NDcwMDg1ODE5OTk2MTk5MjQ0MDA5MTQ5ODg3NzMzMjQ0NjU1NzMxODYyNjYwODAwNzU1MTUxNTkwNDI0MDY0NjIwMTE5OTk5NjM3NjUyNTkxMTgwMDA3MDA2ODcyMTkzMTUzODM2OTg3MDQ5MjQyNzYyNDMwMjE3NTc2NDI2ODM1MzIyODQxNzIyMTE3ODY1Njg2MzMzOTE1NjYzMDgwODI5NTQ3MTY1NTYwMTY2ODMyODgzODgxNjc1MDY2MjUxOTM3NDA5Njk4NTE0NzkyMDYyNDgwMzQxMTUxMTkwMTk5MjcwOTkyMDgzOTgyNTIzMzI0MzU5OTUyNjUyMzQ5MDY5ODE5NTEyOTQwMzUwMzM2NDMwOTE4OTMwODQ2MjA4MTMxNzEzNDI0NTczNzY4NDQ0ODE2Njc4MTM4OTM2MTUyNzY1MzQwOTA4ODM5MTA2MjkyOTcyNTM2MjIzMjEyIl1dfSwgIm5vbmNlIjogIjE5MDU3NTc5MDc0ODIyODA1NTkzODA4MSJ9
            credential_preview:
              '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
              attributes:
              - name: example
                mime-type: image/jpeg
                value: martini
          type: object
        record:
          $ref: '#/components/schemas/IssueCredentialCreateOffer_200_response_record'
    Send_Offer_to_start_credential_issuance_flow_data:
      properties:
        comment:
          example: Hello World
          title: Comment
          type: string
        credential_preview:
          $ref: '#/components/schemas/CredentialPreview'
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - connection_id
      - credential_preview
      type: object
    Send_Offer_to_start_credential_issuance_flow:
      properties:
        data:
          $ref: '#/components/schemas/Send_Offer_to_start_credential_issuance_flow_data'
      required:
      - data
      title: Send Offer to start credential issuance flow
    Send_Offer_in_response_to_Proposal:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - id
      title: Send Offer in response to Proposal
    IssueCredentialSendOffer_request:
      anyOf:
      - $ref: '#/components/schemas/Send_Offer_to_start_credential_issuance_flow'
      - $ref: '#/components/schemas/Send_Offer_in_response_to_Proposal'
      type: object
    Send_Request_to_start_credential_issuance_flow:
      properties:
        id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - id
      title: Send Request to start credential issuance flow
    Send_Request_in_response_to_Offer:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - id
      title: Send Request in response to Offer
    IssueCredentialSendRequest_request:
      anyOf:
      - $ref: '#/components/schemas/Send_Request_to_start_credential_issuance_flow'
      - $ref: '#/components/schemas/Send_Request_in_response_to_Offer'
    IssueCredentialSendRequest_200_response_allOf:
      properties:
        state:
          example: request-sent
    IssueCredentialSendRequest_200_response:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialSendRequest_200_response_allOf'
    IssueCredentialIssue_request_data:
      properties:
        comment:
          example: Hello World
          title: Comment
          type: string
      type: object
    IssueCredentialIssue_request:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        data:
          $ref: '#/components/schemas/IssueCredentialIssue_request_data'
      required:
      - id
    IssueCredentialIssue_200_response_allOf:
      properties:
        state:
          example: credential-issued
    IssueCredentialIssue_200_response:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialIssue_200_response_allOf'
    IssueCredentialStore_request:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - id
    IssueCredentialStore_200_response_allOf:
      properties:
        state:
          example: done
      required:
      - credential_id
    IssueCredentialStore_200_response:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialStore_200_response_allOf'
    IssueCredentialV2PrepareJsonLD_request:
      properties:
        did_method:
          example: key
          title: Did method
          type: string
        proof_type:
          example: Ed25519Signature2018
          title: Proof type
          type: string
      required:
      - did_method
      - proof_type
    IssueCredentialV2PrepareJsonLD_200_response:
      example:
        did: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
      properties:
        did:
          example: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
          title: Fully qualified did
          type: string
      required:
      - did
    IssueCredentialV2SendProposal_request_data_credential_preview_allOf:
      properties:
        '@type':
          example: issue-credential/2.0/credential-preview
    IssueCredentialV2SendProposal_request_data_credential_preview:
      allOf:
      - $ref: '#/components/schemas/CredentialPreview'
      - $ref: '#/components/schemas/IssueCredentialV2SendProposal_request_data_credential_preview_allOf'
    IssueCredentialV2SendProposal_request_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        credential_preview:
          $ref: '#/components/schemas/IssueCredentialV2SendProposal_request_data_credential_preview'
        filter:
          $ref: '#/components/schemas/IssueCredentialV2CredentialProposalFilter'
      required:
      - connection_id
      - filter
      type: object
    IssueCredentialV2SendProposal_request:
      properties:
        data:
          $ref: '#/components/schemas/IssueCredentialV2SendProposal_request_data'
      required:
      - data
      type: object
    Send_Offer_to_start_credential_issuance_flow_1:
      properties:
        data:
          $ref: '#/components/schemas/IssueCredentialV2SendProposal_request_data'
      required:
      - data
      title: Send Offer to start credential issuance flow
    IssueCredentialV2SendOffer_request:
      anyOf:
      - $ref: '#/components/schemas/Send_Offer_to_start_credential_issuance_flow_1'
      - $ref: '#/components/schemas/Send_Offer_in_response_to_Proposal'
      type: object
    Create_Offer_to_start_credential_issuance_flow_1_data:
      properties:
        credential_preview:
          $ref: '#/components/schemas/IssueCredentialV2SendProposal_request_data_credential_preview'
        filter:
          $ref: '#/components/schemas/IssueCredentialV2CredentialProposalFilter'
      required:
      - filter
      type: object
    Create_Offer_to_start_credential_issuance_flow_1:
      properties:
        data:
          $ref: '#/components/schemas/Create_Offer_to_start_credential_issuance_flow_1_data'
      required:
      - data
      title: Create Offer to start credential issuance flow
    IssueCredentialV2CreateOffer_200_response:
      example:
        record: null
        message:
          '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/2.0/offer-credential
          '@id': bfe69ea4-72d7-4be1-97d0-8a499b6eb526
          formats:
          - attach_id: indy
            format: hlindy/cred-abstract@v2.0
          offers~attach:
          - '@id': indy
            mime-type: application/json
            data:
              base64: eyJzY2hlbWFfaWQiOiAiV1ZxcHBVdjlYM1d5V0dyYm5zNVVpYToyOkV4YW1wbGU6MS4wIiwgImNyZWRfZGVmX2lkIjogIkVoeDNSWlNWMzhwbjNNWXZ4dEhoYlE6MzpDTDoyMTM3ODE6ZGVmYXVsdCIsICJrZXlfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiMzQzMzE3Njc5MzU5MTI2MTAyNDU5Mzg4OTM5MzU4OTY1MzIzNzMxNTA1NDcyMjAyOTAzMjYzNjQzMjMwNzkwODUxMDY5MjI5MDMyMjEiLCAieHpfY2FwIjogIjY1ODkyMjE5MDg3Njc2NTIzMTI2NjY2MTExMTc5Njg2OTE4MDQ2NjI2MjAzNzcyNTU0NDYwOTYzMTI4NzYxMjU4OTI3MTYwNjI0MTY3NzE4ODgyMjYxMzEwNDA5NTc3OTAwMDU4OTc5NTk5NzcyODU5NTk2NzY0NTMwNjE3MzAxNzYzMDc1MDk1NTg1MjQ1MjQwMzI1MTIzNTE5ODUyNjU1Mjg4MDQ2MDQ0ODIwMzIwMjc5MjY4OTA4NTczMTc1ODAwODM2ODU3MTUzMjA0NjYyMDM5NTQwNTc5NjY4Nzk5MzY1OTczOTQ0MjYxOTg4NjY3OTM0MDQyODkzOTYyMDQyOTgyOTUwMjE3MTUxNTU0MDEzNTg3MjcwMzg4MTE3NDE1MDM5NzY4Mjk2NTYwNDU0NTk1MDc5NDEyNTg5MzY5NzAzNDIzNDE3NDE3OTEwMDI5MDM2MjE0MzA5OTMxODU2NjMwMzcxNTQzNzg2NTc5Njg3NTE4NTU0MDU2ODYwMjUxMTkxMjgyMjI1MDQ1NzU4MjQwNjIwMDMxMTAyMDI1NDc0MzE0MzY3NjUzOTI5ODg0Njk2MDQwMzQ0NTEyMDA4NzE1MzIxODYyMDc2NjIyMTYxNDM3Mzk1MDI4ODI4MzMxMzUwMDkxNDA5MTAyMDQ0ODg2ODcxMzE1NzkwNzYwOTMyMjE1OTg3MTg2MzMyNjg2MzcwNTU3MDgwOTk1MjU2NTgwMjA3NDE4MzgzNDcxMjI3ODE3MjkwNjE2MjUzOTA4ODA0NzIzODA2MDIxMjQ0Nzc0MTg1MzEwNzQzMjk4NDQ5MjAyNTIyMTczMDk5MDk5NDAxMDkzNTU1NzEyNDEzNDYwNDA2MzAzMjY2MDc0NDg3NTU0ODA5NzQ5NTg0MzMyMTQyNDM2NTUzMTE3MDI5NTA2MiIsICJ4cl9jYXAiOiBbWyJleGFtcGxlIiwgIjQ3OTQzOTIzNTUxMzk1Mjk0MDExOTEwNjExMDYxODM3OTEzNzU4MjAwODk2MzU0OTk3NDYxMjUzNjQxNDc3NjQzOTczNTcwNjY2OTgzMTkyNzg1Nzg5MzYzODEyMjk3NDY2MjA1ODE4NDQ0MTAzNzM3MjcwMzA0NjY3NjU3MTYxMjA2MzczODk2NDQ1OTUwMDcwMzcxNjQ3MjQ5MDIxNjk3NDA4MDkxNTc0MTQzODI1ODY2NzYyMzI5MDU4MDM2MzQ3Mjc1NjY1OTE1NjEwMTIxNDYxMDc2NTg3MDE4NTcwMTg5MTUzNzg4NTQ0NTM5NjY5NjY0NjAzODA5MTYzODYzNzMzODEwODI5NTQ0Njc1ODk1MDc2MTgyODA1NDc4MTMxMTMzMDg5NDEzMDU2MDgyNTUwMjE3Njk2ODMyNTg5Nzk2NzI1NzM0MTQ0OTg2MTI3OTc4NzEyMTQ5NDM4ODE1NzA2MDM0NzY4NTg2NzQ3MzM2MjMwMzk4NDAxMTU5NTA4NzgzMTQ5MDMyMDY5NTUzODQxMDE1NzE5NDk4MjE2OTEyNDAzMDcyMTMxNzgyMjg2MDE2MzIzMDY1ODMxMDUxMDU0MTIyNzMwODU0Njk1NzMyMzAyNzc0ODgwMTcyNTI0OTk3NTk0MjE1MjE1NzI2MTU1MjY5Mzk3MTUxMDg5NzE2MTc1MjQxMzg0NTEwMTI3MjI5NDI5OTcyNzU2NzMzMzIyODg5MjgxODUxNjMxNzcxNTAwOTA5ODkzNTgxNDA2MzQ4MTgxODc2NDk3NjQ2OTE5MTIzNDI1NzIwNTQ5MjE1MDE4NzE4Mzg1NjAxNTcwMzE5NzQ4MjAwMDgyMDk2MzQzMTIzMTE2NjU3NTU4ODMxODU1NjQ2NjU1NTQ2ODI5Mjk5NjQzMjM0OTYxODAwMTg4MiJdLCBbIm1hc3Rlcl9zZWNyZXQiLCAiMzg0NzYyNzI1ODkxMDM5MDIzNjUyNjUzMDU0MzAxNDUzOTk1MDk2NTAwMTQxNzQxNDQ5OTIyODY5OTEwNTc5NDU3OTE1MTAxNTU4NzgwODQ3MzU1NTMxMjgyOTI1MTQ5NTA1NzA3NDM4OTQyMDAyODk1NjQ4ODA5MTgyODAxOTc2ODgyMDMxMTcxNTMwNTYwODc5NDQ2ODczMjg3NzA2MTY5OTEzODA0MTY1Nzg4Njc2OTY4MDI3MTI4NTE4MDcyMjU2NTAxMjUxMzQ4Nzc4NzM3MzE4NzAyMTAxODE1NTU0NzE0ODQ4NjQ1NTA5MTczMjQ1NDYzOTE0NTM3MjYzODA5NzAwNDc2NjM2NzE2OTQ1NjgxNTMzMTA2MTM3MjY5MDc1MzY5MjEwOTExNTc5NDY5MTc3NjI5MjA0NDA0MjQ4MTA2MzExNzI5MjE1MTQ4ODM4MTc1NDcwMDg1ODE5OTk2MTk5MjQ0MDA5MTQ5ODg3NzMzMjQ0NjU1NzMxODYyNjYwODAwNzU1MTUxNTkwNDI0MDY0NjIwMTE5OTk5NjM3NjUyNTkxMTgwMDA3MDA2ODcyMTkzMTUzODM2OTg3MDQ5MjQyNzYyNDMwMjE3NTc2NDI2ODM1MzIyODQxNzIyMTE3ODY1Njg2MzMzOTE1NjYzMDgwODI5NTQ3MTY1NTYwMTY2ODMyODgzODgxNjc1MDY2MjUxOTM3NDA5Njk4NTE0NzkyMDYyNDgwMzQxMTUxMTkwMTk5MjcwOTkyMDgzOTgyNTIzMzI0MzU5OTUyNjUyMzQ5MDY5ODE5NTEyOTQwMzUwMzM2NDMwOTE4OTMwODQ2MjA4MTMxNzEzNDI0NTczNzY4NDQ0ODE2Njc4MTM4OTM2MTUyNzY1MzQwOTA4ODM5MTA2MjkyOTcyNTM2MjIzMjEyIl1dfSwgIm5vbmNlIjogIjE5MDU3NTc5MDc0ODIyODA1NTkzODA4MSJ9
          credential_preview:
            '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/2.0/credential-preview
            attributes:
            - name: example
              mime-type: image/jpeg
              value: martini
      properties:
        message:
          example:
            '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/2.0/offer-credential
            '@id': bfe69ea4-72d7-4be1-97d0-8a499b6eb526
            formats:
            - attach_id: indy
              format: hlindy/cred-abstract@v2.0
            offers~attach:
            - '@id': indy
              mime-type: application/json
              data:
                base64: eyJzY2hlbWFfaWQiOiAiV1ZxcHBVdjlYM1d5V0dyYm5zNVVpYToyOkV4YW1wbGU6MS4wIiwgImNyZWRfZGVmX2lkIjogIkVoeDNSWlNWMzhwbjNNWXZ4dEhoYlE6MzpDTDoyMTM3ODE6ZGVmYXVsdCIsICJrZXlfY29ycmVjdG5lc3NfcHJvb2YiOiB7ImMiOiAiMzQzMzE3Njc5MzU5MTI2MTAyNDU5Mzg4OTM5MzU4OTY1MzIzNzMxNTA1NDcyMjAyOTAzMjYzNjQzMjMwNzkwODUxMDY5MjI5MDMyMjEiLCAieHpfY2FwIjogIjY1ODkyMjE5MDg3Njc2NTIzMTI2NjY2MTExMTc5Njg2OTE4MDQ2NjI2MjAzNzcyNTU0NDYwOTYzMTI4NzYxMjU4OTI3MTYwNjI0MTY3NzE4ODgyMjYxMzEwNDA5NTc3OTAwMDU4OTc5NTk5NzcyODU5NTk2NzY0NTMwNjE3MzAxNzYzMDc1MDk1NTg1MjQ1MjQwMzI1MTIzNTE5ODUyNjU1Mjg4MDQ2MDQ0ODIwMzIwMjc5MjY4OTA4NTczMTc1ODAwODM2ODU3MTUzMjA0NjYyMDM5NTQwNTc5NjY4Nzk5MzY1OTczOTQ0MjYxOTg4NjY3OTM0MDQyODkzOTYyMDQyOTgyOTUwMjE3MTUxNTU0MDEzNTg3MjcwMzg4MTE3NDE1MDM5NzY4Mjk2NTYwNDU0NTk1MDc5NDEyNTg5MzY5NzAzNDIzNDE3NDE3OTEwMDI5MDM2MjE0MzA5OTMxODU2NjMwMzcxNTQzNzg2NTc5Njg3NTE4NTU0MDU2ODYwMjUxMTkxMjgyMjI1MDQ1NzU4MjQwNjIwMDMxMTAyMDI1NDc0MzE0MzY3NjUzOTI5ODg0Njk2MDQwMzQ0NTEyMDA4NzE1MzIxODYyMDc2NjIyMTYxNDM3Mzk1MDI4ODI4MzMxMzUwMDkxNDA5MTAyMDQ0ODg2ODcxMzE1NzkwNzYwOTMyMjE1OTg3MTg2MzMyNjg2MzcwNTU3MDgwOTk1MjU2NTgwMjA3NDE4MzgzNDcxMjI3ODE3MjkwNjE2MjUzOTA4ODA0NzIzODA2MDIxMjQ0Nzc0MTg1MzEwNzQzMjk4NDQ5MjAyNTIyMTczMDk5MDk5NDAxMDkzNTU1NzEyNDEzNDYwNDA2MzAzMjY2MDc0NDg3NTU0ODA5NzQ5NTg0MzMyMTQyNDM2NTUzMTE3MDI5NTA2MiIsICJ4cl9jYXAiOiBbWyJleGFtcGxlIiwgIjQ3OTQzOTIzNTUxMzk1Mjk0MDExOTEwNjExMDYxODM3OTEzNzU4MjAwODk2MzU0OTk3NDYxMjUzNjQxNDc3NjQzOTczNTcwNjY2OTgzMTkyNzg1Nzg5MzYzODEyMjk3NDY2MjA1ODE4NDQ0MTAzNzM3MjcwMzA0NjY3NjU3MTYxMjA2MzczODk2NDQ1OTUwMDcwMzcxNjQ3MjQ5MDIxNjk3NDA4MDkxNTc0MTQzODI1ODY2NzYyMzI5MDU4MDM2MzQ3Mjc1NjY1OTE1NjEwMTIxNDYxMDc2NTg3MDE4NTcwMTg5MTUzNzg4NTQ0NTM5NjY5NjY0NjAzODA5MTYzODYzNzMzODEwODI5NTQ0Njc1ODk1MDc2MTgyODA1NDc4MTMxMTMzMDg5NDEzMDU2MDgyNTUwMjE3Njk2ODMyNTg5Nzk2NzI1NzM0MTQ0OTg2MTI3OTc4NzEyMTQ5NDM4ODE1NzA2MDM0NzY4NTg2NzQ3MzM2MjMwMzk4NDAxMTU5NTA4NzgzMTQ5MDMyMDY5NTUzODQxMDE1NzE5NDk4MjE2OTEyNDAzMDcyMTMxNzgyMjg2MDE2MzIzMDY1ODMxMDUxMDU0MTIyNzMwODU0Njk1NzMyMzAyNzc0ODgwMTcyNTI0OTk3NTk0MjE1MjE1NzI2MTU1MjY5Mzk3MTUxMDg5NzE2MTc1MjQxMzg0NTEwMTI3MjI5NDI5OTcyNzU2NzMzMzIyODg5MjgxODUxNjMxNzcxNTAwOTA5ODkzNTgxNDA2MzQ4MTgxODc2NDk3NjQ2OTE5MTIzNDI1NzIwNTQ5MjE1MDE4NzE4Mzg1NjAxNTcwMzE5NzQ4MjAwMDgyMDk2MzQzMTIzMTE2NjU3NTU4ODMxODU1NjQ2NjU1NTQ2ODI5Mjk5NjQzMjM0OTYxODAwMTg4MiJdLCBbIm1hc3Rlcl9zZWNyZXQiLCAiMzg0NzYyNzI1ODkxMDM5MDIzNjUyNjUzMDU0MzAxNDUzOTk1MDk2NTAwMTQxNzQxNDQ5OTIyODY5OTEwNTc5NDU3OTE1MTAxNTU4NzgwODQ3MzU1NTMxMjgyOTI1MTQ5NTA1NzA3NDM4OTQyMDAyODk1NjQ4ODA5MTgyODAxOTc2ODgyMDMxMTcxNTMwNTYwODc5NDQ2ODczMjg3NzA2MTY5OTEzODA0MTY1Nzg4Njc2OTY4MDI3MTI4NTE4MDcyMjU2NTAxMjUxMzQ4Nzc4NzM3MzE4NzAyMTAxODE1NTU0NzE0ODQ4NjQ1NTA5MTczMjQ1NDYzOTE0NTM3MjYzODA5NzAwNDc2NjM2NzE2OTQ1NjgxNTMzMTA2MTM3MjY5MDc1MzY5MjEwOTExNTc5NDY5MTc3NjI5MjA0NDA0MjQ4MTA2MzExNzI5MjE1MTQ4ODM4MTc1NDcwMDg1ODE5OTk2MTk5MjQ0MDA5MTQ5ODg3NzMzMjQ0NjU1NzMxODYyNjYwODAwNzU1MTUxNTkwNDI0MDY0NjIwMTE5OTk5NjM3NjUyNTkxMTgwMDA3MDA2ODcyMTkzMTUzODM2OTg3MDQ5MjQyNzYyNDMwMjE3NTc2NDI2ODM1MzIyODQxNzIyMTE3ODY1Njg2MzMzOTE1NjYzMDgwODI5NTQ3MTY1NTYwMTY2ODMyODgzODgxNjc1MDY2MjUxOTM3NDA5Njk4NTE0NzkyMDYyNDgwMzQxMTUxMTkwMTk5MjcwOTkyMDgzOTgyNTIzMzI0MzU5OTUyNjUyMzQ5MDY5ODE5NTEyOTQwMzUwMzM2NDMwOTE4OTMwODQ2MjA4MTMxNzEzNDI0NTczNzY4NDQ0ODE2Njc4MTM4OTM2MTUyNzY1MzQwOTA4ODM5MTA2MjkyOTcyNTM2MjIzMjEyIl1dfSwgIm5vbmNlIjogIjE5MDU3NTc5MDc0ODIyODA1NTkzODA4MSJ9
            credential_preview:
              '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/2.0/credential-preview
              attributes:
              - name: example
                mime-type: image/jpeg
                value: martini
          type: object
        record:
          $ref: '#/components/schemas/IssueCredentialCreateOffer_200_response_record'
    Send_Request_in_response_to_Offer_1:
      description: "It is currently not possible yet to start from a credential request,\
        \ even though supported for some credential types (e.g. JSON-LD)"
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - id
      title: Send Request in response to Offer
    IssueCredentialV2SendRequest_request:
      anyOf:
      - $ref: '#/components/schemas/Send_Request_in_response_to_Offer_1'
    IssueCredentialV2Store_200_response_allOf_indy:
      properties:
        credential_id:
          example: 828761d2-65e9-44a5-852e-1f60b943ab65
          title: Credential Id
          type: string
      required:
      - credential_id
    IssueCredentialV2Store_200_response_allOf:
      properties:
        state:
          example: done
        indy:
          $ref: '#/components/schemas/IssueCredentialV2Store_200_response_allOf_indy'
        json-ld:
          $ref: '#/components/schemas/IssueCredentialV2Store_200_response_allOf_indy'
      required:
      - indy
      - json-ld
    IssueCredentialV2Store_200_response:
      allOf:
      - $ref: '#/components/schemas/IssueCredentialOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialV2Store_200_response_allOf'
    IssueCredentialV3SendProposal_request_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        pthid:
          example: 5a7f69cf-ee3c-4a75-9975-1aa3c28db122
          title: pthid
          type: string
      required:
      - connection_id
      - pthid
      type: object
    IssueCredentialV3SendProposal_request:
      properties:
        data:
          $ref: '#/components/schemas/IssueCredentialV3SendProposal_request_data'
      required:
      - data
      type: object
    IssueCredentialV3Issue_request:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        data:
          type: object
      required:
      - id
    RevocationRevokeCredential_request_data:
      properties:
        cred_rev_id:
          example: "12345"
          title: Indy Credential Revocation Id
          type: string
        rev_registry_id:
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
          title: Indy Revocation Registry Id
          type: string
        publish_immediately:
          type: boolean
        notify_connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - cred_rev_id
      - publish_immediately
      - rev_registry_id
      type: object
    RevocationRevokeCredential_request:
      properties:
        data:
          $ref: '#/components/schemas/RevocationRevokeCredential_request_data'
      required:
      - data
    RevocationGetNotificationByThreadId_200_response:
      example:
        thread_id: thread_id
      properties:
        thread_id:
          type: string
    Indy_Credential:
      description: Expected response for an Indy credential
      properties:
        referent:
          example: 828761d2-65e9-44a5-852e-1f60b943ab65
          title: Credential Id
          type: string
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
      required:
      - cred_def_id
      - referent
      - schema_id
      title: Indy Credential
    W3C_Credential:
      description: Expected response for a W3C credential
      properties:
        credential_id:
          example: 828761d2-65e9-44a5-852e-1f60b943ab65
          title: Credential Id
          type: string
        credential:
          example:
            '@context':
            - https://www.w3.org/2018/credentials/v1
            - https://www.w3.org/2018/credentials/examples/v1
            id: http://example.edu/credentials/1872
            type:
            - VerifiableCredential
            - AlumniCredential
            issuer: https://example.edu/issuers/565049
            issuanceDate: 2010-01-01T19:73:24Z
            credentialSubject:
              id: did:example:ebfeb1f712ebc6f1c276e12ec21
              alumniOf:
                id: did:example:c276e12ec21ebfeb1f712ebc6f1
                name:
                - value: Example University
                  lang: en
                - value: Exemple d'Université
                  lang: fr
            proof:
              type: RsaSignature2018
              created: 2017-06-18T21:19:10Z
              proofPurpose: assertionMethod
              verificationMethod: https://example.edu/issuers/keys/1
              jws: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TCYt5X
                sITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUc
                X16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtj
                PAYuNzVBAh4vGHSrQyHUdBBPM
          externalDocs:
            url: https://www.w3.org/TR/vc-data-model/
          title: W3C Verifiable Credential
          type: object
      required:
      - credential
      - credential_id
      title: W3C Credential
    CredentialGetById_200_response:
      oneOf:
      - $ref: '#/components/schemas/Indy_Credential'
      - $ref: '#/components/schemas/W3C_Credential'
    CredentialGetRevocationStatusById_200_response:
      example:
        revoked: true
      properties:
        revoked:
          type: boolean
      required:
      - revoked
    PresentProofSendProposal_request_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        presentation_proposal:
          $ref: '#/components/schemas/PresentationPreview'
      required:
      - connection_id
      - presentation_proposal
      type: object
    PresentProofSendProposal_request:
      properties:
        data:
          $ref: '#/components/schemas/PresentProofSendProposal_request_data'
      required:
      - data
      type: object
    PresentProofSendProposal_200_response:
      allOf:
      - $ref: '#/components/schemas/PresentProofOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialSendProposal_200_response_allOf'
    PresentProofSendRequest_request_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        presentation_request:
          example:
            comment: This is a comment for the request for presentation.
            proof_request:
              data:
                requested_attributes:
                  attr_1:
                    name: attr_1
                    restrictions:
                    - schema_name: test_schema
                      schema_version: 1.0.0
                requested_predicates:
                  attr_3:
                    name: attr_3
                    p_type: '>'
                    p_value: 8
                    restrictions:
                    - schema_name: test_schema
                      schema_version: 1.0.0
          externalDocs:
            url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
          title: Presentation Request Message
          type: object
      required:
      - connection_id
      - presentation_request
      type: object
    PresentProofSendRequest_request:
      properties:
        data:
          $ref: '#/components/schemas/PresentProofSendRequest_request_data'
      required:
      - data
      type: object
    PresentProofSendRequest_200_response:
      allOf:
      - $ref: '#/components/schemas/PresentProofOperationResponse'
      - $ref: '#/components/schemas/IssueCredentialSendRequest_200_response_allOf'
    PresentProofSendPresentation_request_data:
      allOf:
      - $ref: '#/components/schemas/RequestedCredentials'
      - $ref: '#/components/schemas/IssueCredentialIssue_request_data'
    PresentProofSendPresentation_request:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        data:
          $ref: '#/components/schemas/PresentProofSendPresentation_request_data'
      required:
      - data
      - id
      type: object
    PresentProofSendPresentation_200_response_allOf:
      properties:
        state:
          example: presentation-sent
    PresentProofSendPresentation_200_response:
      allOf:
      - $ref: '#/components/schemas/PresentProofOperationResponse'
      - $ref: '#/components/schemas/PresentProofSendPresentation_200_response_allOf'
    PresentProofVerifyPresentation_request:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - id
      type: object
    PresentProofVerifyPresentation_200_response_allOf:
      properties:
        state:
          example: done
    PresentProofVerifyPresentation_200_response:
      allOf:
      - $ref: '#/components/schemas/PresentProofOperationResponse'
      - $ref: '#/components/schemas/PresentProofVerifyPresentation_200_response_allOf'
    Send_Indy_Proof_Request_data_presentation_request_allOf:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - connection_id
    Send_Indy_Proof_Request_data_presentation_request:
      allOf:
      - $ref: '#/components/schemas/PresentProofV2SendRequestIndy'
      - $ref: '#/components/schemas/Send_Indy_Proof_Request_data_presentation_request_allOf'
    Send_Indy_Proof_Request_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        presentation_request:
          $ref: '#/components/schemas/Send_Indy_Proof_Request_data_presentation_request'
      required:
      - connection_id
      - presentation_request
      type: object
    Send_Indy_Proof_Request:
      properties:
        data:
          $ref: '#/components/schemas/Send_Indy_Proof_Request_data'
      required:
      - data
      title: Send Indy Proof Request
      type: object
    Send_DIF_Proof_Request_data_presentation_request:
      allOf:
      - $ref: '#/components/schemas/PresentProofV2SendRequestDIF'
      - $ref: '#/components/schemas/Send_Indy_Proof_Request_data_presentation_request_allOf'
    Send_DIF_Proof_Request_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        presentation_request:
          $ref: '#/components/schemas/Send_DIF_Proof_Request_data_presentation_request'
      required:
      - connection_id
      - presentation_request
      type: object
    Send_DIF_Proof_Request:
      properties:
        data:
          $ref: '#/components/schemas/Send_DIF_Proof_Request_data'
      required:
      - data
      title: Send DIF Proof Request
      type: object
    PresentProofV2SendRequest_request:
      anyOf:
      - $ref: '#/components/schemas/Send_Indy_Proof_Request'
      - $ref: '#/components/schemas/Send_DIF_Proof_Request'
      type: object
    PresentProofV2SendPresentation_request:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        data:
          title: TODO
          type: object
      required:
      - data
      - id
      type: object
    PresentProofV2VerifyPresentation_200_response_allOf:
      properties:
        state:
          example: done
        verified:
          example: true
          type: boolean
      required:
      - state
      - verified
    PresentProofV2VerifyPresentation_200_response:
      allOf:
      - $ref: '#/components/schemas/PresentProofOperationResponse'
      - $ref: '#/components/schemas/PresentProofV2VerifyPresentation_200_response_allOf'
    Send_Proposal_data_presentation_proposal:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        comment:
          example: Hello World
          title: Comment
          type: string
      required:
      - connection_id
    Send_Proposal_data:
      properties:
        presentation_proposal:
          $ref: '#/components/schemas/Send_Proposal_data_presentation_proposal'
      required:
      - presentation_proposal
      type: object
    Send_Proposal:
      properties:
        data:
          $ref: '#/components/schemas/Send_Proposal_data'
      required:
      - data
      title: Send Proposal
      type: object
    PresentProofV3SendProposal_request:
      anyOf:
      - $ref: '#/components/schemas/Send_Proposal'
      type: object
    PresentProofV3SendRequest_request_data_presentation_request:
      anyOf:
      - $ref: '#/components/schemas/PresentProofV2SendRequestIndy'
      - $ref: '#/components/schemas/PresentProofV2SendRequestDIF'
    PresentProofV3SendRequest_request_data:
      properties:
        presentation_request:
          $ref: '#/components/schemas/PresentProofV3SendRequest_request_data_presentation_request'
      type: object
    PresentProofV3SendRequest_request:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        data:
          $ref: '#/components/schemas/PresentProofV3SendRequest_request_data'
      required:
      - data
      type: object
    OutOfBandCreateInvitation_request_data:
      properties:
        mediator_connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        use_public_did:
          type: boolean
        attachments:
          items:
            example:
              '@type': https://didcomm.org/the-protocol/1.0/the-version
            type: object
          type: array
        handshake_protocols:
          example:
          - https://didcomm.org/didexchange/1.0
          items:
            type: string
          type: array
      type: object
    OutOfBandCreateInvitation_request:
      properties:
        data:
          $ref: '#/components/schemas/OutOfBandCreateInvitation_request_data'
      required:
      - data
      type: object
    OutOfBandCreateInvitation_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        invitation:
          '@id': f3375429-b116-4224-b55f-563d7ef461f1
          '@type': https://didcomm.org/out-of-band/1.0/invitation
          label: Invitation created by http://host.docker.internal:9042
          services:
          - id: 86548a10-2b2a-47ce-b9cc-5e835e9add50
            type: did-communication
            recipientKeys:
            - did:key:z6MkurAvs5HUdN8ARq8indff9ZvVAHNMqWBEevrc82ydPLNh
            serviceEndpoint: http://host.docker.internal:9041
          accept:
          - didcomm/aip2;env=rfc19
          handshake_protocols:
          - https://didcomm.org/didexchange/1.0
        state: ""
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/DidExchangeState'
          - example: invitation-sent
        invitation:
          example:
            '@id': f3375429-b116-4224-b55f-563d7ef461f1
            '@type': https://didcomm.org/out-of-band/1.0/invitation
            label: Invitation created by http://host.docker.internal:9042
            services:
            - id: 86548a10-2b2a-47ce-b9cc-5e835e9add50
              type: did-communication
              recipientKeys:
              - did:key:z6MkurAvs5HUdN8ARq8indff9ZvVAHNMqWBEevrc82ydPLNh
              serviceEndpoint: http://host.docker.internal:9041
            accept:
            - didcomm/aip2;env=rfc19
            handshake_protocols:
            - https://didcomm.org/didexchange/1.0
          title: Out of Band Invitation
          type: object
      required:
      - invitation
      - state
    OutOfBandReceiveInvitation_request_data_allOf:
      properties:
        use_existing_connection:
          type: boolean
        mediator_connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - use_existing_connection
      type: object
    OutOfBandReceiveInvitation_request_data:
      allOf:
      - $ref: '#/components/schemas/OutOfBandInvitation'
      - $ref: '#/components/schemas/OutOfBandReceiveInvitation_request_data_allOf'
      example:
        '@id': f3375429-b116-4224-b55f-563d7ef461f1
        '@type': https://didcomm.org/out-of-band/1.0/invitation
        label: Invitation created by http://host.docker.internal:9042
        services:
        - id: 86548a10-2b2a-47ce-b9cc-5e835e9add50
          type: did-communication
          recipientKeys:
          - did:key:z6MkurAvs5HUdN8ARq8indff9ZvVAHNMqWBEevrc82ydPLNh
          serviceEndpoint: http://host.docker.internal:9041
        accept:
        - didcomm/aip2;env=rfc19
        handshake_protocols:
        - https://didcomm.org/didexchange/1.0
        use_existing_connection: false
        mediator_connection_id: 77d58e00-f79a-477c-9e50-c05254ab4b54
    OutOfBandReceiveInvitation_request:
      properties:
        data:
          $ref: '#/components/schemas/OutOfBandReceiveInvitation_request_data'
      required:
      - data
      type: object
    OutOfBandReceiveInvitation_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: ""
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/DidExchangeState'
          - example: invitation-received
      required:
      - connection_id
      - state
    DidExchangeGetById_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: invitation-sent
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          $ref: '#/components/schemas/DidExchangeState'
      required:
      - connection_id
      - state
    DidExchangeGetByInvitationId_200_response:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
    DidExchangeCreateRequestResolvableDid_request_data:
      properties:
        their_public_did:
          example: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
          title: Fully qualified did
          type: string
        their_did:
          example: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
          title: Fully qualified did
          type: string
      required:
      - their_did
      - their_public_did
      type: object
    DidExchangeCreateRequestResolvableDid_request:
      properties:
        data:
          $ref: '#/components/schemas/DidExchangeCreateRequestResolvableDid_request_data'
      required:
      - data
      type: object
    DidExchangeReceiveRequestResolvableDid_request:
      properties:
        data:
          type: object
      required:
      - data
      type: object
    DIDCommV2CreateInvitation_request_data:
      properties:
        goal-code:
          example: streamlined-vc
          title: DIDComm V2 Out of Band Invitation Goal Code
          type: string
      type: object
    DIDCommV2CreateInvitation_request:
      properties:
        data:
          $ref: '#/components/schemas/DIDCommV2CreateInvitation_request_data'
      type: object
    DIDCommV2CreateInvitation_200_response:
      example:
        invitation:
          id: f3375429-b116-4224-b55f-563d7ef461f1
          type: https://didcomm.org/out-of-band/2.0/invitation
          from: did:orb:example.org:EiCRKRZKozDBAlxpZ0UI2UylXW6AmwSdQfguo0VGeyVKKg
          body:
            goal-code: streamlined-vc
            accept:
            - didcomm/v2
      properties:
        invitation:
          example:
            id: f3375429-b116-4224-b55f-563d7ef461f1
            type: https://didcomm.org/out-of-band/2.0/invitation
            from: did:orb:example.org:EiCRKRZKozDBAlxpZ0UI2UylXW6AmwSdQfguo0VGeyVKKg
            body:
              goal-code: streamlined-vc
              accept:
              - didcomm/v2
          title: DIDComm V2 Out of Band Invitation
          type: object
      required:
      - invitation
    DIDCommV2AcceptInvitation_request_data:
      properties:
        invitation:
          example:
            id: f3375429-b116-4224-b55f-563d7ef461f1
            type: https://didcomm.org/out-of-band/2.0/invitation
            from: did:orb:example.org:EiCRKRZKozDBAlxpZ0UI2UylXW6AmwSdQfguo0VGeyVKKg
            body:
              goal-code: streamlined-vc
              accept:
              - didcomm/v2
          title: DIDComm V2 Out of Band Invitation
          type: object
      type: object
    DIDCommV2AcceptInvitation_request:
      properties:
        data:
          $ref: '#/components/schemas/DIDCommV2AcceptInvitation_request_data'
      required:
      - data
      type: object
    CredentialPreview_attributes_inner:
      properties:
        name:
          type: string
        mime-type:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    PresentationPreview_attributes_inner:
      properties:
        name:
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        mime-type:
          type: string
        value:
          type: string
        referent:
          type: string
      required:
      - name
      type: object
    PresentationPreview_predicates_inner:
      properties:
        name:
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        predicate:
          enum:
          - <
          - <=
          - '>='
          - '>'
          type: string
        threshold:
          type: string
      required:
      - cred_def_id
      - name
      - predicate
      - threshold
      type: object
