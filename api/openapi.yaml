openapi: 3.0.0
info:
  contact:
    name: Province of British Columbia
    url: https://github.com/hyperledger/aries-agent-test-harness
  description: |
    This page documents the backchannel API the test harness uses to communicate with agents under tests.

    For more information checkout the [Aries Interoperability Information](http://aries-interop.info) page.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Aries Agent Test Harness Backchannel API
  version: 1.0.0
  x-logo:
    url: https://raw.githubusercontent.com/hyperledger/aries-agent-test-harness/master/docs/assets/aries-logo.png
    altText: Hyperledger Aries logo
servers:
- description: Agent Backchannel
  url: http://localhost:{port}
  variables:
    port:
      default: "9020"
      description: |
        The port to use for the backchannel
          * Acme:    9020
          * Bob:      9030
          * Faber:    9040
          * Mallory:  9050
      enum:
      - "9020"
      - "9030"
      - "9040"
      - "9050"
tags:
- description: Agent commands to get agent status
  name: Status
- description: Agent commands related to connection topic
  name: Connection
- description: Agent commands related to did topic
  name: DID
- description: Agent commands related to schema topic
  name: Schema
- description: Agent commands related to credential-definition topic
  name: Credential Definition
- description: Agent commands related to issue-credential topic
  name: Issue Credential
- description: Agent commands related to issue-credential-v2 topic
  name: Issue Credential V2
- description: Agent commands related to credential topic
  name: Credential
- description: Agent commands related to present-proof topic
  name: Present Proof
paths:
  /agent/command/status:
    get:
      operationId: StatusGet
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  status:
                    enum:
                    - active
                    type: string
          description: Agent is active
        "418":
          content:
            application/json:
              schema:
                properties:
                  status:
                    enum:
                    - inactive
                    type: string
                required:
                - status
          description: Agent is not active
      summary: Get agent/backchannel status
      tags:
      - Status
  /agent/command/version:
    get:
      operationId: StatusGet
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: 0.6.0
                type: string
          description: Agent version
      summary: Get agent/backchannel version
      tags:
      - Status
  /agent/command/connection:
    get:
      operationId: ConnectionGetAll
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectionResponse'
                type: array
          description: Connections
      summary: Get all connections
      tags:
      - Connection
  /agent/command/connection/{connectionId}:
    get:
      operationId: ConnectionGetById
      parameters:
      - explode: false
        in: path
        name: connectionId
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionResponse'
          description: Connection
        "404":
          description: Connection not found
      summary: Get connection by id
      tags:
      - Connection
  /agent/command/connection/create-invitation:
    post:
      operationId: ConnectionCreateInvitation
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connection_id:
                    $ref: '#/components/schemas/ConnectionId'
                  invitation:
                    $ref: '#/components/schemas/ConnectionInvitation'
                required:
                - connection_id
                - invitation
          description: Invitation created
      summary: Create a new connection invitation
      tags:
      - Connection
  /agent/command/connection/receive-invitation:
    post:
      operationId: ConnectionReceiveInvitation
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                data:
                  example:
                    '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation
                    '@id': 11640bd1-cdc2-45e4-9fcc-43ccc27fc9d4
                    serviceEndpoint: http://192.168.65.3:9021
                    recipientKeys:
                    - GqQh9pLeMrE7E2ZxA47GbW4XQuLYsyd1bdfZvxLi7aZ6
                    label: aca-py
                  title: Connection Invitation
                  type: object
              required:
              - data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Invitation received
      summary: Receive an invitation
      tags:
      - Connection
  /agent/command/connection/accept-invitation:
    post:
      operationId: ConnectionAcceptInvitation
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                id:
                  example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
                  title: Connection Id
                  type: string
              required:
              - id
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Invitation accepted
      summary: Accept an invitation
      tags:
      - Connection
  /agent/command/connection/accept-request:
    post:
      operationId: ConnectionAcceptRequest
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                id:
                  example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
                  title: Connection Id
                  type: string
              required:
              - id
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Request accepted
      summary: Accept a connection request
      tags:
      - Connection
  /agent/command/connection/send-ping:
    post:
      operationId: ConnectionSendPing
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              properties:
                id:
                  example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
                  title: Connection Id
                  type: string
                data:
                  $ref: '#/components/schemas/_agent_command_connection_send_ping_data'
              required:
              - data
              - id
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Trust ping sent
      summary: Send trust ping
      tags:
      - Connection
  /agent/command/did:
    get:
      operationId: DIDGetPublic
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: Public DID information
      summary: Get public DID
      tags:
      - DID
  /agent/command/schema/{schemaId}:
    get:
      operationId: SchemaGetById
      parameters:
      - explode: false
        in: path
        name: schemaId
        required: true
        schema:
          $ref: '#/components/schemas/SchemaId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Schema
        "404":
          description: Schema not found
      summary: Get schema by id
      tags:
      - Schema
  /agent/command/schema:
    post:
      operationId: SchemaCreate
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/_agent_command_schema_data'
              required:
              - data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Schema created
      summary: Create a new schema
      tags:
      - Schema
  /agent/command/credential-definition/{credentialDefinitionId}:
    get:
      operationId: CredentialDefinitionGetById
      parameters:
      - explode: false
        in: path
        name: credentialDefinitionId
        required: true
        schema:
          $ref: '#/components/schemas/CredentialDefinitionId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinition'
          description: Credential Definition
        "404":
          description: Credential Definition not found
      summary: Get credential definition by id
      tags:
      - Credential Definition
  /agent/command/credential-definition:
    post:
      operationId: CredentialDefinitionCreate
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/_agent_command_credential_definition_data'
              required:
              - data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  credential_definition_id:
                    $ref: '#/components/schemas/CredentialDefinitionId'
          description: Credential definition created
      summary: Create a new credential definition
      tags:
      - Credential Definition
  /agent/command/issue-credential/{credentialExchangeThreadId}:
    get:
      operationId: IssueCredentialGetByThreadId
      parameters:
      - explode: false
        in: path
        name: credentialExchangeThreadId
        required: true
        schema:
          $ref: '#/components/schemas/ThreadId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialOperationResponse'
          description: Credential Exchange
        "404":
          description: Credential exchange record not found
      summary: Get credential exchange record by thread id
      tags:
      - Issue Credential
  /agent/command/issue-credential/send-proposal:
    post:
      description: |
        Send a `propose-credential` message to connection with `connection_id` in body.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#propose-credential
      operationId: IssueCredentialSendProposal
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/_agent_command_issue_credential_send_proposal_data'
              required:
              - data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IssueCredentialOperationResponse'
                - properties:
                    state:
                      example: proposal-sent
          description: Credential proposal sent
      summary: Send credential proposal
      tags:
      - Issue Credential
  /agent/command/issue-credential/send-offer:
    post:
      description: |
        Send an `offer-credential` message.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#offer-credential
      operationId: IssueCredentialSendOffer
      requestBody:
        content:
          application/json:
            examples:
              new:
                description: |
                  When sending an offer to start the credential issuance flow, the data of the credential that is going to be issued must be passed as value to the data key.
                summary: Send Offer to start credential issuance flow
                value:
                  data:
                    comment:
                      $ref: '#/components/schemas/Comment/example'
                    credential_preview:
                      $ref: '#/components/schemas/CredentialPreview/example'
                    cred_def_id:
                      $ref: '#/components/schemas/CredentialDefinitionId/example'
                    connection_id:
                      $ref: '#/components/schemas/ConnectionId/example'
              response:
                description: |
                  When sending an offer in response to a received proposal only the thread id should be passed
                summary: Send Offer in response to Proposal
                value:
                  id:
                    $ref: '#/components/schemas/ThreadId/example'
            schema:
              anyOf:
              - properties:
                  data:
                    properties:
                      comment:
                        $ref: '#/components/schemas/Comment'
                      credential_preview:
                        $ref: '#/components/schemas/CredentialPreview'
                      cred_def_id:
                        $ref: '#/components/schemas/CredentialDefinitionId'
                      connection_id:
                        $ref: '#/components/schemas/ConnectionId'
                    required:
                    - connection_id
                    - credential_preview
                    type: object
                required:
                - data
                title: Send Offer to start credential issuance flow
              - properties:
                  id:
                    $ref: '#/components/schemas/ThreadId'
                required:
                - id
                title: Send Offer in response to Proposal
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IssueCredentialOperationResponse'
                - properties:
                    state:
                      example: offer-sent
          description: Credential offer sent
      summary: Send credential offer
      tags:
      - Issue Credential
  /agent/command/issue-credential/send-request:
    post:
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#request-credential
      operationId: IssueCredentialSendRequest
      requestBody:
        content:
          application/json:
            examples:
              response:
                description: |
                  When sending a Request in response to a received offer only the thread id should be passed
                summary: Send Request in response to Offer
                value:
                  id:
                    $ref: '#/components/schemas/ThreadId/example'
              new:
                description: |
                  This is not possible with Indy based credentials.
                summary: Send Request to start credential issuance flow
                value:
                  id:
                    $ref: '#/components/schemas/ConnectionId/example'
            schema:
              anyOf:
              - properties:
                  id:
                    $ref: '#/components/schemas/ConnectionId'
                required:
                - id
                title: Send Request to start credential issuance flow
              - properties:
                  id:
                    $ref: '#/components/schemas/ThreadId'
                required:
                - id
                title: Send Request in response to Offer
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IssueCredentialOperationResponse'
                - properties:
                    state:
                      example: request-sent
          description: Credential request sent
      summary: Send credential request
      tags:
      - Issue Credential
  /agent/command/issue-credential/issue:
    post:
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#issue-credential
      operationId: IssueCredentialIssue
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  $ref: '#/components/schemas/ThreadId'
                data:
                  properties:
                    comment:
                      $ref: '#/components/schemas/Comment'
                  type: object
              required:
              - id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IssueCredentialOperationResponse'
                - properties:
                    state:
                      example: credential-issued
          description: Credential issued
      summary: Issue Credential
      tags:
      - Issue Credential
  /agent/command/issue-credential/store:
    post:
      operationId: IssueCredentialStore
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  $ref: '#/components/schemas/ThreadId'
              required:
              - id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IssueCredentialOperationResponse'
                - properties:
                    state:
                      example: done
                  required:
                  - credential_id
          description: Credential stored
      summary: Store Credential
      tags:
      - Issue Credential
  /agent/command/issue-credential-v2/prepare-json-ld:
    post:
      operationId: IssueCredentialV2PrepareJsonLD
      requestBody:
        content:
          application/json:
            schema:
              properties:
                did_method:
                  $ref: '#/components/schemas/DidMethod'
                proof_type:
                  $ref: '#/components/schemas/ProofType'
              required:
              - did_method
              - proof_type
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  did:
                    $ref: '#/components/schemas/FullDid'
                required:
                - did
          description: Ready to issue a JSON-LD credential
      summary: Prepare for issuing a JSON-LD credential (RFC0593)
      tags:
      - Issue Credential V2
  /agent/command/credential/{credentialId}:
    get:
      operationId: CredentialGetById
      parameters:
      - explode: false
        in: path
        name: credentialId
        required: true
        schema:
          $ref: '#/components/schemas/CredentialId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                - description: Expected response for an Indy credential
                  properties:
                    referent:
                      $ref: '#/components/schemas/CredentialId'
                    schema_id:
                      $ref: '#/components/schemas/SchemaId'
                    cred_def_id:
                      $ref: '#/components/schemas/CredentialDefinitionId'
                  required:
                  - cred_def_id
                  - referent
                  - schema_id
                  title: Indy Credential
                - description: Expected response for a W3C credential
                  properties:
                    credential_id:
                      $ref: '#/components/schemas/CredentialId'
                    credential:
                      $ref: '#/components/schemas/W3CCredential'
                  required:
                  - credential
                  - credential_id
                  title: W3C Credential
          description: Credential
        "404":
          description: Credential not found
      summary: Get credential by id
      tags:
      - Credential
  /agent/command/proof/{presentationExchangeThreadId}:
    get:
      operationId: PresentProofGetByThreadId
      parameters:
      - explode: false
        in: path
        name: presentationExchangeThreadId
        required: true
        schema:
          $ref: '#/components/schemas/ThreadId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofOperationResponse'
          description: Presentation Exchange
        "404":
          description: Presentation exchange record not found
      summary: Get presentation exchange record by thread id
      tags:
      - Present Proof
  /agent/command/proof/send-proposal:
    post:
      description: |
        Send a `propose-presentation` message to connection with `connection_id` in body. When the backchannel sends a `send-proposal` operation to a backchannel it sends an `presentation-preview` inner message.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#propose-presentation
      operationId: PresentProofSendProposal
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/_agent_command_proof_send_proposal_data'
              required:
              - data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PresentProofOperationResponse'
                - properties:
                    state:
                      example: proposal-sent
          description: Presentation proposal sent
      summary: Send presentation proposal
      tags:
      - Present Proof
  /agent/command/proof/send-request:
    post:
      description: |
        Send a `request-presentation` message to connection with `connection_id` in body. When the backchannel sends a `send-request` operation to a backchannel it sends the (almost) complete `request-presentation` message. However the data inside the proposal is not base64 encoded yet. See the [`proof_request_json`](https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1415-L1432) docs for expected contents of the data for Indy credentials.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
      operationId: PresentProofSendRequest
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/json:
            schema:
              properties:
                data:
                  $ref: '#/components/schemas/_agent_command_proof_send_request_data'
              required:
              - data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PresentProofOperationResponse'
                - properties:
                    state:
                      example: request-sent
          description: Presentation request sent
      summary: Send presentation request
      tags:
      - Present Proof
  /agent/command/proof/send-presentation:
    post:
      description: |
        Send a `presentation` message in response to presentation request with specified thread id. See the [`requested_credentials_json`](https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1433-L1445) docs for expected contents of the data for Indy credentials.
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#presentation
      operationId: PresentProofSendPresentation
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          application/json:
            schema:
              properties:
                id:
                  example: e7280776-5315-4569-8cac-42cae108adfe
                  title: Thread Id
                  type: string
                data:
                  allOf:
                  - $ref: '#/components/schemas/RequestedCredentials'
                  - properties:
                      comment:
                        $ref: '#/components/schemas/Comment'
                    type: object
              required:
              - data
              - id
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PresentProofOperationResponse'
                - properties:
                    state:
                      example: presentation-sent
          description: Presentation sent
      summary: Send presentation
      tags:
      - Present Proof
  /agent/command/proof/verify-presentation:
    post:
      description: |
        Verify the received presentation with specified thread id.
      operationId: PresentProofVerifyPresentation
      requestBody:
        $ref: '#/components/requestBodies/inline_object_10'
        content:
          application/json:
            schema:
              properties:
                id:
                  example: e7280776-5315-4569-8cac-42cae108adfe
                  title: Thread Id
                  type: string
              required:
              - id
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PresentProofOperationResponse'
                - properties:
                    state:
                      example: done
          description: Presentation verified
      summary: Verify presentation
      tags:
      - Present Proof
components:
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: true
    inline_object_9:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_9'
      required: true
    inline_object_10:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_10'
      required: true
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
    inline_object_8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_8'
      required: true
    inline_object_7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_7'
      required: true
    inline_object_6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_6'
      required: true
    inline_object_5:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_5'
      required: true
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
      required: true
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
      required: true
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
      required: true
  schemas:
    ConnectionInvitation:
      example:
        '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation
        '@id': 11640bd1-cdc2-45e4-9fcc-43ccc27fc9d4
        serviceEndpoint: http://192.168.65.3:9021
        recipientKeys:
        - GqQh9pLeMrE7E2ZxA47GbW4XQuLYsyd1bdfZvxLi7aZ6
        label: aca-py
      title: Connection Invitation
      type: object
    ConnectionId:
      example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
      title: Connection Id
      type: string
    ThreadId:
      example: e7280776-5315-4569-8cac-42cae108adfe
      title: Thread Id
      type: string
    SchemaId:
      example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
      title: Schema Id
      type: string
    CredentialDefinitionId:
      example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
      title: Credential Definition Id
      type: string
    ConnectionState:
      description: All possible connection state values
      enum:
      - invitation
      - request
      - response
      - active
      example: invitation
      title: Connection State
      type: string
    Connection:
      example: {}
      title: Connection
      type: object
    ConnectionResponse:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        connection: {}
        state: invitation
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          $ref: '#/components/schemas/ConnectionState'
        connection:
          example: {}
          title: Connection
          type: object
      required:
      - connection_id
      - state
      title: Connection Response
      type: object
    DidMethod:
      example: key
      title: Did method
      type: string
    ProofType:
      example: Ed25519Signature2018
      title: Proof type
      type: string
    FullDid:
      example: did:key:z6MkfZfsiVsAy6CgQht7vQVk1dWBnztivjbhxRiKTtTi62PB
      title: Fully qualified did
      type: string
    Did:
      example: Y9oNbFNTgxrRuvxQk3xEzr
      title: DID
      type: string
    Verkey:
      example: HymVhRozF7o9Sh9iyKXu5WKHP95YERhrpZxGx5d6WhYw
      title: Verkey
      type: string
    Comment:
      example: Hello World
      title: Comment
      type: string
    SchemaName:
      example: test_schema
      title: Schema Name
      type: string
    SchemaVersion:
      example: 1.0.0
      title: Schema Version
      type: string
    SchemaAttributes:
      example:
      - attr_1
      - attr_2
      - attr_3
      items:
        type: string
      title: Schema Attributes
      type: array
    Schema:
      description: Schema definition
      example:
        ver: "1.0"
        id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
        name: test_schema
        version: 1.0.0
        attrNames:
        - attr_1
        - attr_2
        - attr_3
        seqNo: 11
      title: Schema
      type: object
    W3CCredential:
      example:
        '@context':
        - https://www.w3.org/2018/credentials/v1
        - https://www.w3.org/2018/credentials/examples/v1
        id: http://example.edu/credentials/1872
        type:
        - VerifiableCredential
        - AlumniCredential
        issuer: https://example.edu/issuers/565049
        issuanceDate: 2010-01-01T19:73:24Z
        credentialSubject:
          id: did:example:ebfeb1f712ebc6f1c276e12ec21
          alumniOf:
            id: did:example:c276e12ec21ebfeb1f712ebc6f1
            name:
            - value: Example University
              lang: en
            - value: Exemple d'Université
              lang: fr
        proof:
          type: RsaSignature2018
          created: 2017-06-18T21:19:10Z
          proofPurpose: assertionMethod
          verificationMethod: https://example.edu/issuers/keys/1
          jws: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TCYt5X sITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUc
            X16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtj
            PAYuNzVBAh4vGHSrQyHUdBBPM
      externalDocs:
        url: https://www.w3.org/TR/vc-data-model/
      title: W3C Verifiable Credential
      type: object
    CredentialPreview:
      example:
        '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
        attributes:
        - name: attr_1
          value: value_1
        - name: attr_2
          value: value_2
        - name: attr_3
          value: "10"
      properties:
        '@type':
          enum:
          - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
          example: did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/CredentialPreview_attributes'
          type: array
      required:
      - '@type'
      - attributes
      title: Credential Preview
      type: object
    IssueCredentialState:
      description: All possible issue credential state values
      enum:
      - proposal-sent
      - proposal-received
      - offer-sent
      - offer-received
      - request-sent
      - request-received
      - credential-issued
      - credential-received
      - done
      example: proposal-sent
      title: Issue Credential State
      type: string
    CredentialDefinition:
      example:
        ver: "1.0"
        id: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
        schemaId: "12"
        type: CL
        tag: default
        value:
          primary:
            n: "127473542495438147573510476102476902133854813754098957204867619522405674317018859941864352419933227338200593131633863547249552725335523634158360861379038920996404174540285309296147612235783265529767167904996672533424299318502061201785710802874714294174143582682739350240229266415073900875507216317608608419590749758007624873612987354273561597672087026667313974344205743513108098303412867935178289607206971675919540105355234142077505442787841104628317493214564810784261197466701597725036470989697050855442369151927195340336984787674149053901429543050018150008478471976322268372173725164950897146486534208375313658743913"
            s: "65818689269823967224337061200277779392234203780958681071979765611348839168322943966737475112261896111357320138778757065891281921197440097002615498509033425652242864586741386765592821062979097745378937128174004971762786640103105629442159475365159836976073886029307851026908970994829903300109597230301114225997246242679312570675015835522760053319269527084928663538396971295690506335377466402252848447042892658905613203874434705837943677780063921041179819697545228811016183063967989936330561640506841490120102577693339579651117393959310406568508979515298779995407222937217220638869118337307458754771745779882842551583957"
            r:
              attr_2: "51288787261098209501918361017434738039396559240181084024072376043981733617197124422285362785531867106205259059511012989265257750815057229625776239902268148159240026351692626846471237370316944382717070664579921786642246297025320221128643932326231901994502071437080527938105845057316611594317815585962995630440264494906187392024263524589040353791190656247954182173035217728619640076109690946048473714974821555775006753553400010494644755834190135206012433445625838647683519920548605994424810625611229251495082321603992265565001261836732982193329161683683007877406661513473331737004850593281692214631901319662119982702922"
              attr_3: "49181762688290033657446628790584551868718995111464422170653915452393747911840814545440872765372893672471205136395434982292712460522218700053539095558984733806664620823639102136028452144009159713045675694364042524060684443787233750663981609531778189390047496947791414470032823060753313065437518080235878845351585405484399614405394732610591997574454401630571733355205236989435994214291321960467589480432939966179940916409629940016780143983651757105859829934723575147299207641665320314894905208079668584551936316156492573527926041185621509809863665431708246846967753137673120991441299733316834328405117780995288938831960"
              master_secret: "55538424482357179006904475057212929303648337854551436067860163418580875286658754309614134356521736148588690128194367442517503542151131893353616029898291001113787008415246944257559064252055726634969959428779277791311649310859911986025543178916305739383261726815449892298017969062336790138195201464646418205024584174631846494837622469674261184752618226770681209326126925275817705162548925201642177095627695920338858257041172323289863931904819081634906164566038325643344387794492965878883835475209080317985881686751050847796692787879655322665209901159744163351765059041544796505393057421762647235069315054477528853561473"
              attr_1: "30886155743965686596111154816080405248462718126264612304549353774874576024335575570672949599223811931464968785591555429018481986959035338465010646916129018856811265590112946954474656478128827689132913637543377270592217574931365985240940393300396509940083648506176813465677576969450791064392913905672340945666537607742715770967118252787128981065813564952993994324545119742090220379288320480251447895567821617698929571634776885837657497224943766401548060195388838088667649983419151624233451714099262934942791309973082062184242430968684229937149556567677716686322793149698990735633517128615499672788711239033452193882997"
            rctxt: "118794108011306418186599966013685417259067451572329168338986396401718511272829290486080995212827126457817056257265484527810068143652813250691318847597106924333754555635689923547896416240741937417433198117397677657367813549201117642415892893893381488036182474297804412028150810635810333104761444058436184382989414463435135399687357899136817489918140316906972132553030427022094507232967240719401668656063683319995507797481327116566453773630750501126563798296642025598222840921566196961717932895723665756200235727569096614264333988899662958311074895571782854329655460918882500227649533684869211196542823703742125337784110"
            z: "105630626525262054412237755083369001506042501169646719098603962721650276426684319172879455142677137798560163792358891628363088368803209632822777508716551660571988904519705987074094883201485589766095616179828793397893771789008873400971460093284769835475804783847161628863255694379113641839797171437881461956336479878362639116657891310026976287218412427465483710278481629012528677992951433715775723708478290067190705706789707748967166740980626023098110954588495187304096367803794208972671801623501450811525547654409352588261071510140289955775228914918919001173412112332959725654909432886608249741918119912786853133051762"
      title: Credential Definition
      type: object
    IssueCredentialOperationResponse:
      example:
        thread_id: e7280776-5315-4569-8cac-42cae108adfe
        state: proposal-sent
        credential_id: 828761d2-65e9-44a5-852e-1f60b943ab65
      properties:
        state:
          $ref: '#/components/schemas/IssueCredentialState'
        thread_id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        credential_id:
          example: 828761d2-65e9-44a5-852e-1f60b943ab65
          title: Credential Id
          type: string
      required:
      - state
      - thread_id
      title: Issue Credential Operation Response
      type: object
    CredentialId:
      example: 828761d2-65e9-44a5-852e-1f60b943ab65
      title: Credential Id
      type: string
    PresentProofOperationResponse:
      example:
        thread_id: e7280776-5315-4569-8cac-42cae108adfe
        state: proposal-sent
      properties:
        state:
          $ref: '#/components/schemas/PresentProofState'
        thread_id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - state
      - thread_id
      title: Present Proof Operation Response
      type: object
    PresentProofState:
      description: All possible present proof state values
      enum:
      - proposal-sent
      - proposal-received
      - request-sent
      - request-received
      - presentation-sent
      - presentation-received
      - reject-sent
      - done
      example: proposal-sent
      title: Present Proof State
      type: string
    PresentationPreview:
      example:
        '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview
        attributes:
        - name: attr_1
          cred_def_id: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          value: value_1
          referent: "0"
        predicates:
        - name: attr_2
          cred_def_id: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          predicate: '>='
          treshold: "100"
      properties:
        '@type':
          enum:
          - did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview
          example: did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/PresentationPreview_attributes'
          type: array
        predicates:
          items:
            $ref: '#/components/schemas/PresentationPreview_predicates'
          type: array
      required:
      - '@type'
      - attributes
      - predicates
      title: Presentation Preview
      type: object
    PresentationRequestMessage:
      example:
        '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation
        comment: This is a comment for the request for presentation.
        request_presentations~attach:
          '@id': libindy-request-presentation-0
          mime-type: application/json
          data:
            requested_attributes:
              attr_1:
                name: attr_1
                restrictions:
                - schema_name: test_schema
                  schema_version: 1.0.0
            requested_predicates:
              attr_3:
                name: attr_3
                p_type: '>'
                p_value: 8
                restrictions:
                - schema_name: test_schema
                  schema_version: 1.0.0
      externalDocs:
        url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
      title: Presentation Request Message
      type: object
    RequestedCredentials:
      example:
        requested_attributes:
          attr_1:
            revealed: true
            cred_id: 828761d2-65e9-44a5-852e-1f60b943ab65
        requested_predicates:
          attr_3:
            cred_id: 828761d2-65e9-44a5-852e-1f60b943ab65
      externalDocs:
        url: https://github.com/hyperledger/indy-sdk/blob/57dcdae74164d1c7aa06f2cccecaae121cefac25/libindy/src/api/anoncreds.rs#L1433-L1445
      title: Requested Credentials
      type: object
    inline_object:
      properties:
        data:
          example:
            '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation
            '@id': 11640bd1-cdc2-45e4-9fcc-43ccc27fc9d4
            serviceEndpoint: http://192.168.65.3:9021
            recipientKeys:
            - GqQh9pLeMrE7E2ZxA47GbW4XQuLYsyd1bdfZvxLi7aZ6
            label: aca-py
          title: Connection Invitation
          type: object
      required:
      - data
      type: object
    inline_response_200:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: invitation
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          $ref: '#/components/schemas/ConnectionState'
      type: object
    inline_object_1:
      properties:
        id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - id
      type: object
    inline_response_200_1:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: ""
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - example: request
      type: object
    inline_object_2:
      properties:
        id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - id
      type: object
    inline_response_200_2:
      example:
        connection_id: 8fb9ea21-d094-4506-86b6-c7c1627d753a
        state: ""
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          - example: response
      type: object
    _agent_command_connection_send_ping_data:
      properties:
        comment:
          example: Hello World
          title: Comment
          type: string
      required:
      - comment
      type: object
    inline_object_3:
      properties:
        id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        data:
          $ref: '#/components/schemas/_agent_command_connection_send_ping_data'
      required:
      - data
      - id
      type: object
    inline_response_200_3:
      example:
        verkey: HymVhRozF7o9Sh9iyKXu5WKHP95YERhrpZxGx5d6WhYw
        did: Y9oNbFNTgxrRuvxQk3xEzr
      properties:
        did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
        verkey:
          example: HymVhRozF7o9Sh9iyKXu5WKHP95YERhrpZxGx5d6WhYw
          title: Verkey
          type: string
      type: object
    _agent_command_schema_data:
      properties:
        schema_name:
          example: test_schema
          title: Schema Name
          type: string
        schema_version:
          example: 1.0.0
          title: Schema Version
          type: string
        attributes:
          example:
          - attr_1
          - attr_2
          - attr_3
          items:
            type: string
          title: Schema Attributes
          type: array
      required:
      - attributes
      - schema_name
      - schema_version
      type: object
    inline_object_4:
      properties:
        data:
          $ref: '#/components/schemas/_agent_command_schema_data'
      required:
      - data
      type: object
    inline_response_200_4:
      example:
        schema:
          ver: "1.0"
          id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          name: test_schema
          version: 1.0.0
          attrNames:
          - attr_1
          - attr_2
          - attr_3
          seqNo: 11
        schema_id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
      properties:
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        schema:
          description: Schema definition
          example:
            ver: "1.0"
            id: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
            name: test_schema
            version: 1.0.0
            attrNames:
            - attr_1
            - attr_2
            - attr_3
            seqNo: 11
          title: Schema
          type: object
      type: object
    _agent_command_credential_definition_data:
      properties:
        support_revocation:
          example: false
          type: boolean
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        tag:
          example: default
          type: string
      required:
      - schema_id
      - support_revocation
      - tag
      type: object
    inline_object_5:
      properties:
        data:
          $ref: '#/components/schemas/_agent_command_credential_definition_data'
      required:
      - data
      type: object
    _agent_command_issue_credential_send_proposal_data:
      properties:
        comment:
          example: Hello World
          title: Comment
          type: string
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        schema_issuer_did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
        schema_id:
          example: Y9oNbFNTgxrRuvxQk3xEzr:2:test_schema:1.0.0
          title: Schema Id
          type: string
        schema_name:
          example: test_schema
          title: Schema Name
          type: string
        schema_version:
          example: 1.0.0
          title: Schema Version
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        issuer_did:
          example: Y9oNbFNTgxrRuvxQk3xEzr
          title: DID
          type: string
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
      required:
      - connection_id
      type: object
    inline_object_6:
      properties:
        data:
          $ref: '#/components/schemas/_agent_command_issue_credential_send_proposal_data'
      required:
      - data
      type: object
    _agent_command_proof_send_proposal_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        presentation_proposal:
          $ref: '#/components/schemas/PresentationPreview'
      required:
      - connection_id
      - presentation_proposal
      type: object
    inline_object_7:
      properties:
        data:
          $ref: '#/components/schemas/_agent_command_proof_send_proposal_data'
      required:
      - data
      type: object
    _agent_command_proof_send_request_data:
      properties:
        connection_id:
          example: 8fb9ea21-d094-4506-86b6-c7c1627d753a
          title: Connection Id
          type: string
        presentation_proposal:
          example:
            '@type': did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/request-presentation
            comment: This is a comment for the request for presentation.
            request_presentations~attach:
              '@id': libindy-request-presentation-0
              mime-type: application/json
              data:
                requested_attributes:
                  attr_1:
                    name: attr_1
                    restrictions:
                    - schema_name: test_schema
                      schema_version: 1.0.0
                requested_predicates:
                  attr_3:
                    name: attr_3
                    p_type: '>'
                    p_value: 8
                    restrictions:
                    - schema_name: test_schema
                      schema_version: 1.0.0
          externalDocs:
            url: https://github.com/hyperledger/aries-rfcs/blob/master/features/0037-present-proof/README.md#request-presentation
          title: Presentation Request Message
          type: object
      required:
      - connection_id
      - presentation_proposal
      type: object
    inline_object_8:
      properties:
        data:
          $ref: '#/components/schemas/_agent_command_proof_send_request_data'
      required:
      - data
      type: object
    inline_object_9:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/RequestedCredentials'
          - properties:
              comment:
                $ref: '#/components/schemas/Comment'
            type: object
      required:
      - data
      - id
      type: object
    inline_object_10:
      properties:
        id:
          example: e7280776-5315-4569-8cac-42cae108adfe
          title: Thread Id
          type: string
      required:
      - id
      type: object
    CredentialPreview_attributes:
      properties:
        name:
          type: string
        mime-type:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    PresentationPreview_attributes:
      properties:
        name:
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        mime-type:
          type: string
        value:
          type: string
        referent:
          type: string
      required:
      - name
      type: object
    PresentationPreview_predicates:
      properties:
        name:
          type: string
        cred_def_id:
          example: TTK1F3HKKBdtb6HrhrxYtC:3:CL:12:default
          title: Credential Definition Id
          type: string
        predicate:
          enum:
          - <
          - <=
          - '>='
          - '>'
          type: string
        threshold:
          type: string
      required:
      - cred_def_id
      - name
      - predicate
      - threshold
      type: object
